--------------------------------------------------------
-- Archivo creado  - miércoles-enero-25-2012   
--------------------------------------------------------
  DROP TABLE "ANNO_CURSO" cascade constraints;
  DROP TABLE "DECANO" cascade constraints;
  DROP TABLE "DOCENTE" cascade constraints;
  DROP TABLE "DOCUMENTO" cascade constraints;
  DROP TABLE "ESCUELA" cascade constraints;
  DROP TABLE "ESTADO" cascade constraints;
  DROP TABLE "ESTPROY" cascade constraints;
  DROP TABLE "ESTUDIANTE" cascade constraints;
  DROP TABLE "FACULTAD" cascade constraints;
  DROP TABLE "GRADO" cascade constraints;
  DROP TABLE "PROYDOC" cascade constraints;
  DROP TABLE "PROYECTO" cascade constraints;
  DROP TABLE "PROYEST" cascade constraints;
  DROP TABLE "SOLICITANTE" cascade constraints;
  DROP TABLE "TIPO_DOCUMENTO" cascade constraints;
  DROP TABLE "UBIGEO" cascade constraints;
  DROP TABLE "UNIVERSIDAD" cascade constraints;
  DROP SEQUENCE "SEQ_ALUM";
  DROP SEQUENCE "SEQ_DECANO";
  DROP SEQUENCE "SEQ_DOCENTE";
  DROP SEQUENCE "SEQ_DOCUMENTO";
  DROP SEQUENCE "SEQ_ESC";
  DROP SEQUENCE "SEQ_ESTADO";
  DROP SEQUENCE "SEQ_FAC";
  DROP SEQUENCE "SEQ_GRADO";
  DROP SEQUENCE "SEQ_PROY";
  DROP SEQUENCE "SEQ_SOLI";
  DROP SEQUENCE "SEQ_TIPO_DOC";
  DROP SEQUENCE "SEQ_UNI";
  DROP FUNCTION "BEANANNOCURSO";
  DROP FUNCTION "BEANDECANO";
  DROP FUNCTION "BEANDOCENTE";
  DROP FUNCTION "BEANDOCUMENTO";
  DROP FUNCTION "BEANESCUELA";
  DROP FUNCTION "BEANESTADO";
  DROP FUNCTION "BEANESTPROY";
  DROP FUNCTION "BEANESTUDIANTE";
  DROP FUNCTION "BEANFACULTAD";
  DROP FUNCTION "BEANGRADO";
  DROP FUNCTION "BEANPROYDOC";
  DROP FUNCTION "BEANPROYECTO";
  DROP FUNCTION "BEANPROYEST";
  DROP FUNCTION "BEANSOLICITANTE";
  DROP FUNCTION "BEANTIPODOCUMENTO";
  DROP FUNCTION "BEANUBIGEO";
  DROP FUNCTION "BEANUNIVERSIDAD";
  DROP FUNCTION "LISTARANNOCURSO";
  DROP FUNCTION "LISTARDECANO";
  DROP FUNCTION "LISTARDOCENTE";
  DROP FUNCTION "LISTARDOCUMENTOS";
  DROP FUNCTION "LISTARESCUELA";
  DROP FUNCTION "LISTARESTADO";
  DROP FUNCTION "LISTARESTPROY";
  DROP FUNCTION "LISTARESTUDIANTE";
  DROP FUNCTION "LISTARFACULTAD";
  DROP FUNCTION "LISTARGRADO";
  DROP FUNCTION "LISTARPROYDOC";
  DROP FUNCTION "LISTARPROYECTO";
  DROP FUNCTION "LISTARPROYECTODOCENTE";
  DROP FUNCTION "LISTARPROYECTOESTUDIANTE";
  DROP FUNCTION "LISTARPROYECTOSOLICITANTE";
  DROP FUNCTION "LISTARPROYEST";
  DROP FUNCTION "LISTARSOLICITANTE";
  DROP FUNCTION "LISTARTIPODOCUMENTO";
  DROP FUNCTION "LISTARUBIGEO";
  DROP FUNCTION "MANTANNOCURSO";
  DROP FUNCTION "MANTDECANO";
  DROP FUNCTION "MANTDOCENTE";
  DROP FUNCTION "MANTDOCUMENTO";
  DROP FUNCTION "MANTESCUELA";
  DROP FUNCTION "MANTESTADO";
  DROP FUNCTION "MANTESTPROY";
  DROP FUNCTION "MANTESTUDIANTE";
  DROP FUNCTION "MANTFACULTAD";
  DROP FUNCTION "MANTGRADO";
  DROP FUNCTION "MANTPROYDOC";
  DROP FUNCTION "MANTPROYECTO";
  DROP FUNCTION "MANTPROYEST";
  DROP FUNCTION "MANTSOLICITANTE";
  DROP FUNCTION "MANTTIPODOCUMENTO";
  DROP FUNCTION "MANTUBIGEO";
  DROP FUNCTION "MANTUNIVERSIDAD";
  DROP PACKAGE "TYPES";
--------------------------------------------------------
--  DDL for Sequence SEQ_ALUM
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_ALUM"  MINVALUE 1 MAXVALUE 999999999999 INCREMENT BY 1 START WITH 4 NOCACHE  ORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_DECANO
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_DECANO"  MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 2 NOCACHE  ORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_DOCENTE
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_DOCENTE"  MINVALUE 1 MAXVALUE 99999999999 INCREMENT BY 1 START WITH 22 NOCACHE  ORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_DOCUMENTO
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_DOCUMENTO"  MINVALUE 1 MAXVALUE 99999999999 INCREMENT BY 1 START WITH 1 NOCACHE  ORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_ESC
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_ESC"  MINVALUE 1 MAXVALUE 99999999999 INCREMENT BY 1 START WITH 4 NOCACHE  ORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_ESTADO
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_ESTADO"  MINVALUE 1 MAXVALUE 9999999 INCREMENT BY 1 START WITH 8 NOCACHE  ORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_FAC
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_FAC"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 2 NOCACHE  ORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_GRADO
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_GRADO"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 4 NOCACHE  ORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_PROY
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_PROY"  MINVALUE 1 MAXVALUE 99999999999 INCREMENT BY 1 START WITH 4 NOCACHE  ORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_SOLI
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_SOLI"  MINVALUE 1 MAXVALUE 999999999999 INCREMENT BY 1 START WITH 3 NOCACHE  ORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_TIPO_DOC
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_TIPO_DOC"  MINVALUE 1 MAXVALUE 99999 INCREMENT BY 1 START WITH 3 NOCACHE  ORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_UNI
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_UNI"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 2 NOCACHE  ORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Table ANNO_CURSO
--------------------------------------------------------

  CREATE TABLE "ANNO_CURSO" 
   (	"ID" NUMBER, 
	"DESCRIPCION" VARCHAR2(250 BYTE), 
	"ESTADO_ACTUAL" CHAR(1 BYTE)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table DECANO
--------------------------------------------------------

  CREATE TABLE "DECANO" 
   (	"ID" NUMBER, 
	"ID_PROF" NUMBER, 
	"ID_FAC" NUMBER, 
	"FECHAINI" DATE, 
	"FECHAFIN" DATE, 
	"ESTADO_ACTUAL" CHAR(1 BYTE)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table DOCENTE
--------------------------------------------------------

  CREATE TABLE "DOCENTE" 
   (	"ID" NUMBER, 
	"NOMBRES" VARCHAR2(100 BYTE), 
	"APPATERNO" VARCHAR2(100 BYTE), 
	"APMATERNO" VARCHAR2(100 BYTE), 
	"ID_ESCUELA" NUMBER, 
	"ID_GRADO" NUMBER
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table DOCUMENTO
--------------------------------------------------------

  CREATE TABLE "DOCUMENTO" 
   (	"ANNO" NUMBER, 
	"NUMERO" NUMBER, 
	"FECHA" DATE, 
	"PROCEDENCIA" VARCHAR2(100 BYTE), 
	"ID_TIPO_DOC" NUMBER, 
	"ID_PROYECTO" NUMBER
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table ESCUELA
--------------------------------------------------------

  CREATE TABLE "ESCUELA" 
   (	"ID" NUMBER, 
	"DESCRIPCION" VARCHAR2(300 BYTE), 
	"ID_FACULTAD" NUMBER
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table ESTADO
--------------------------------------------------------

  CREATE TABLE "ESTADO" 
   (	"ID" NUMBER, 
	"DESCRIPCION" VARCHAR2(100 BYTE)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table ESTPROY
--------------------------------------------------------

  CREATE TABLE "ESTPROY" 
   (	"ID_ESTADO" NUMBER, 
	"ID_PROYECT" NUMBER, 
	"ESTADO_ACTUAL" CHAR(1 BYTE), 
	"FECHA" DATE
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table ESTUDIANTE
--------------------------------------------------------

  CREATE TABLE "ESTUDIANTE" 
   (	"ID" NUMBER, 
	"NOMBRES" VARCHAR2(100 BYTE), 
	"APPATERNO" VARCHAR2(100 BYTE), 
	"APMATERNO" VARCHAR2(100 BYTE), 
	"CODIGOUNIV" VARCHAR2(50 BYTE), 
	"ID_ESCUELA" NUMBER
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table FACULTAD
--------------------------------------------------------

  CREATE TABLE "FACULTAD" 
   (	"ID" NUMBER, 
	"DESCRIPCION" VARCHAR2(300 BYTE), 
	"SIGLAS" VARCHAR2(10 BYTE), 
	"ID_UNIVERSIDAD" NUMBER
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table GRADO
--------------------------------------------------------

  CREATE TABLE "GRADO" 
   (	"ID" NUMBER, 
	"DESCRIPCION" VARCHAR2(100 BYTE), 
	"SIGLAS" VARCHAR2(10 BYTE)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table PROYDOC
--------------------------------------------------------

  CREATE TABLE "PROYDOC" 
   (	"ID_PROYECTO" NUMBER, 
	"ID_DOCENTE" NUMBER, 
	"CALIDAD" VARCHAR2(50 BYTE)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table PROYECTO
--------------------------------------------------------

  CREATE TABLE "PROYECTO" 
   (	"ID" NUMBER, 
	"ID_SOLICITANTE" NUMBER, 
	"DESCRIPCION" VARCHAR2(200 BYTE), 
	"FECHA_SOL" DATE
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table PROYEST
--------------------------------------------------------

  CREATE TABLE "PROYEST" 
   (	"ID_PROYECTO" NUMBER, 
	"ID_ESTUDIANTE" NUMBER
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table SOLICITANTE
--------------------------------------------------------

  CREATE TABLE "SOLICITANTE" 
   (	"ID" NUMBER, 
	"RAZON_SOCIAL" VARCHAR2(200 BYTE), 
	"CODIGO_UBIGEO" VARCHAR2(10 BYTE), 
	"RUC" VARCHAR2(11 CHAR), 
	"DIRECCION" VARCHAR2(200 CHAR)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table TIPO_DOCUMENTO
--------------------------------------------------------

  CREATE TABLE "TIPO_DOCUMENTO" 
   (	"ID" NUMBER, 
	"DESCRIPCION" VARCHAR2(50 BYTE), 
	"SIGLAS" VARCHAR2(20 CHAR)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table UBIGEO
--------------------------------------------------------

  CREATE TABLE "UBIGEO" 
   (	"CODIGO" VARCHAR2(10 BYTE), 
	"DEPARTAMENTO" VARCHAR2(100 BYTE), 
	"PROVINCIA" VARCHAR2(100 BYTE), 
	"DISTRITO" VARCHAR2(100 BYTE)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table UNIVERSIDAD
--------------------------------------------------------

  CREATE TABLE "UNIVERSIDAD" 
   (	"ID" NUMBER, 
	"DESCRIPCION" VARCHAR2(300 BYTE), 
	"SIGLAS" VARCHAR2(10 BYTE)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_FACULTAD
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK_FACULTAD" ON "FACULTAD" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index IDX_DEPPROVDIST
--------------------------------------------------------

  CREATE INDEX "IDX_DEPPROVDIST" ON "UBIGEO" ("DEPARTAMENTO", "PROVINCIA", "DISTRITO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_ESCUELA
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK_ESCUELA" ON "ESCUELA" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_DOCENTE
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK_DOCENTE" ON "DOCENTE" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_SOLICITANTE
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK_SOLICITANTE" ON "SOLICITANTE" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_PROYEST
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK_PROYEST" ON "PROYEST" ("ID_PROYECTO", "ID_ESTUDIANTE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_UNI
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK_UNI" ON "UNIVERSIDAD" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_DECANO
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK_DECANO" ON "DECANO" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_CODIGO
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK_CODIGO" ON "UBIGEO" ("CODIGO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index IDX_DEPPROV
--------------------------------------------------------

  CREATE INDEX "IDX_DEPPROV" ON "UBIGEO" ("DEPARTAMENTO", "PROVINCIA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_PROYECTO
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK_PROYECTO" ON "PROYECTO" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index U_ESTUDIANTE
--------------------------------------------------------

  CREATE UNIQUE INDEX "U_ESTUDIANTE" ON "ESTUDIANTE" ("CODIGOUNIV") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_ESTADO
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK_ESTADO" ON "ESTADO" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_ESTPROY
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK_ESTPROY" ON "ESTPROY" ("ID_ESTADO", "ID_PROYECT") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_ESTADO_CURSO
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK_ESTADO_CURSO" ON "ANNO_CURSO" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_ESTUDIANTE
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK_ESTUDIANTE" ON "ESTUDIANTE" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index DOCUMENTO_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "DOCUMENTO_PK" ON "DOCUMENTO" ("ANNO", "NUMERO", "ID_TIPO_DOC") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index IDX_DEPARTAMENTO
--------------------------------------------------------

  CREATE INDEX "IDX_DEPARTAMENTO" ON "UBIGEO" ("DEPARTAMENTO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_GRADO
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK_GRADO" ON "GRADO" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_TIPO_DOCUMENTO
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK_TIPO_DOCUMENTO" ON "TIPO_DOCUMENTO" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index U_PROYECTO
--------------------------------------------------------

  CREATE UNIQUE INDEX "U_PROYECTO" ON "PROYECTO" ("ID", "ID_SOLICITANTE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_PROYDOC
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK_PROYDOC" ON "PROYDOC" ("ID_PROYECTO", "ID_DOCENTE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  Constraints for Table PROYEST
--------------------------------------------------------

  ALTER TABLE "PROYEST" ADD CONSTRAINT "PK_PROYEST" PRIMARY KEY ("ID_PROYECTO", "ID_ESTUDIANTE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE;
 
  ALTER TABLE "PROYEST" MODIFY ("ID_PROYECTO" NOT NULL ENABLE);
 
  ALTER TABLE "PROYEST" MODIFY ("ID_ESTUDIANTE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table ESTADO
--------------------------------------------------------

  ALTER TABLE "ESTADO" ADD CONSTRAINT "PK_ESTADO" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE;
 
  ALTER TABLE "ESTADO" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "ESTADO" MODIFY ("DESCRIPCION" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table GRADO
--------------------------------------------------------

  ALTER TABLE "GRADO" ADD CONSTRAINT "PK_GRADO" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE;
 
  ALTER TABLE "GRADO" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GRADO" MODIFY ("DESCRIPCION" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DOCENTE
--------------------------------------------------------

  ALTER TABLE "DOCENTE" ADD CONSTRAINT "PK_DOCENTE" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE;
 
  ALTER TABLE "DOCENTE" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "DOCENTE" MODIFY ("NOMBRES" NOT NULL ENABLE);
 
  ALTER TABLE "DOCENTE" MODIFY ("APPATERNO" NOT NULL ENABLE);
 
  ALTER TABLE "DOCENTE" MODIFY ("APMATERNO" NOT NULL ENABLE);
 
  ALTER TABLE "DOCENTE" MODIFY ("ID_ESCUELA" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table ANNO_CURSO
--------------------------------------------------------

  ALTER TABLE "ANNO_CURSO" ADD CONSTRAINT "PK_ESTADO_CURSO" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE;
 
  ALTER TABLE "ANNO_CURSO" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "ANNO_CURSO" MODIFY ("DESCRIPCION" NOT NULL ENABLE);
 
  ALTER TABLE "ANNO_CURSO" MODIFY ("ESTADO_ACTUAL" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PROYECTO
--------------------------------------------------------

  ALTER TABLE "PROYECTO" ADD CONSTRAINT "PK_PROYECTO" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE;
 
  ALTER TABLE "PROYECTO" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "PROYECTO" MODIFY ("ID_SOLICITANTE" NOT NULL ENABLE);
 
  ALTER TABLE "PROYECTO" MODIFY ("DESCRIPCION" NOT NULL ENABLE);
 
  ALTER TABLE "PROYECTO" MODIFY ("FECHA_SOL" NOT NULL ENABLE);
 
  ALTER TABLE "PROYECTO" ADD CONSTRAINT "U_PROYECTO" UNIQUE ("ID", "ID_SOLICITANTE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table SOLICITANTE
--------------------------------------------------------

  ALTER TABLE "SOLICITANTE" ADD CONSTRAINT "PK_SOLICITANTE" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE;
 
  ALTER TABLE "SOLICITANTE" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "SOLICITANTE" MODIFY ("RAZON_SOCIAL" NOT NULL ENABLE);
 
  ALTER TABLE "SOLICITANTE" MODIFY ("CODIGO_UBIGEO" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table ESCUELA
--------------------------------------------------------

  ALTER TABLE "ESCUELA" ADD CONSTRAINT "PK_ESCUELA" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE;
 
  ALTER TABLE "ESCUELA" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "ESCUELA" MODIFY ("DESCRIPCION" NOT NULL ENABLE);
 
  ALTER TABLE "ESCUELA" MODIFY ("ID_FACULTAD" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PROYDOC
--------------------------------------------------------

  ALTER TABLE "PROYDOC" ADD CONSTRAINT "PK_PROYDOC" PRIMARY KEY ("ID_PROYECTO", "ID_DOCENTE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE;
 
  ALTER TABLE "PROYDOC" MODIFY ("ID_PROYECTO" NOT NULL ENABLE);
 
  ALTER TABLE "PROYDOC" MODIFY ("ID_DOCENTE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table UBIGEO
--------------------------------------------------------

  ALTER TABLE "UBIGEO" ADD CONSTRAINT "PK_CODIGO" PRIMARY KEY ("CODIGO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE;
 
  ALTER TABLE "UBIGEO" MODIFY ("CODIGO" NOT NULL ENABLE);
 
  ALTER TABLE "UBIGEO" MODIFY ("DEPARTAMENTO" NOT NULL ENABLE);
 
  ALTER TABLE "UBIGEO" MODIFY ("PROVINCIA" NOT NULL ENABLE);
 
  ALTER TABLE "UBIGEO" MODIFY ("DISTRITO" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table UNIVERSIDAD
--------------------------------------------------------

  ALTER TABLE "UNIVERSIDAD" ADD CONSTRAINT "PK_UNI" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE;
 
  ALTER TABLE "UNIVERSIDAD" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "UNIVERSIDAD" MODIFY ("DESCRIPCION" NOT NULL ENABLE);
 
  ALTER TABLE "UNIVERSIDAD" MODIFY ("SIGLAS" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table TIPO_DOCUMENTO
--------------------------------------------------------

  ALTER TABLE "TIPO_DOCUMENTO" ADD CONSTRAINT "PK_TIPO_DOCUMENTO" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE;
 
  ALTER TABLE "TIPO_DOCUMENTO" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "TIPO_DOCUMENTO" MODIFY ("DESCRIPCION" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table FACULTAD
--------------------------------------------------------

  ALTER TABLE "FACULTAD" ADD CONSTRAINT "PK_FACULTAD" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE;
 
  ALTER TABLE "FACULTAD" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "FACULTAD" MODIFY ("DESCRIPCION" NOT NULL ENABLE);
 
  ALTER TABLE "FACULTAD" MODIFY ("SIGLAS" NOT NULL ENABLE);
 
  ALTER TABLE "FACULTAD" MODIFY ("ID_UNIVERSIDAD" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DOCUMENTO
--------------------------------------------------------

  ALTER TABLE "DOCUMENTO" ADD CONSTRAINT "DOCUMENTO_PK" PRIMARY KEY ("ANNO", "NUMERO", "ID_TIPO_DOC")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE;
 
  ALTER TABLE "DOCUMENTO" MODIFY ("ANNO" NOT NULL ENABLE);
 
  ALTER TABLE "DOCUMENTO" MODIFY ("NUMERO" NOT NULL ENABLE);
 
  ALTER TABLE "DOCUMENTO" MODIFY ("FECHA" NOT NULL ENABLE);
 
  ALTER TABLE "DOCUMENTO" MODIFY ("PROCEDENCIA" NOT NULL ENABLE);
 
  ALTER TABLE "DOCUMENTO" MODIFY ("ID_TIPO_DOC" NOT NULL ENABLE);
 
  ALTER TABLE "DOCUMENTO" MODIFY ("ID_PROYECTO" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table ESTUDIANTE
--------------------------------------------------------

  ALTER TABLE "ESTUDIANTE" ADD CONSTRAINT "PK_ESTUDIANTE" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE;
 
  ALTER TABLE "ESTUDIANTE" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "ESTUDIANTE" MODIFY ("NOMBRES" NOT NULL ENABLE);
 
  ALTER TABLE "ESTUDIANTE" MODIFY ("APPATERNO" NOT NULL ENABLE);
 
  ALTER TABLE "ESTUDIANTE" MODIFY ("APMATERNO" NOT NULL ENABLE);
 
  ALTER TABLE "ESTUDIANTE" MODIFY ("CODIGOUNIV" NOT NULL ENABLE);
 
  ALTER TABLE "ESTUDIANTE" ADD CONSTRAINT "U_ESTUDIANTE" UNIQUE ("CODIGOUNIV")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table DECANO
--------------------------------------------------------

  ALTER TABLE "DECANO" ADD CONSTRAINT "PK_DECANO" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE;
 
  ALTER TABLE "DECANO" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "DECANO" MODIFY ("ID_PROF" NOT NULL ENABLE);
 
  ALTER TABLE "DECANO" MODIFY ("ID_FAC" NOT NULL ENABLE);
 
  ALTER TABLE "DECANO" MODIFY ("FECHAINI" NOT NULL ENABLE);
 
  ALTER TABLE "DECANO" MODIFY ("ESTADO_ACTUAL" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table ESTPROY
--------------------------------------------------------

  ALTER TABLE "ESTPROY" ADD CONSTRAINT "PK_ESTPROY" PRIMARY KEY ("ID_ESTADO", "ID_PROYECT")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE;
 
  ALTER TABLE "ESTPROY" MODIFY ("ID_ESTADO" NOT NULL ENABLE);
 
  ALTER TABLE "ESTPROY" MODIFY ("ID_PROYECT" NOT NULL ENABLE);
 
  ALTER TABLE "ESTPROY" MODIFY ("ESTADO_ACTUAL" NOT NULL ENABLE);
 
  ALTER TABLE "ESTPROY" MODIFY ("FECHA" NOT NULL ENABLE);
--------------------------------------------------------
--  Ref Constraints for Table DECANO
--------------------------------------------------------

  ALTER TABLE "DECANO" ADD CONSTRAINT "FK_FAC" FOREIGN KEY ("ID_FAC")
	  REFERENCES "FACULTAD" ("ID") ENABLE;
 
  ALTER TABLE "DECANO" ADD CONSTRAINT "FK_PROF" FOREIGN KEY ("ID_PROF")
	  REFERENCES "DOCENTE" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DOCENTE
--------------------------------------------------------

  ALTER TABLE "DOCENTE" ADD CONSTRAINT "FK_ESCUELA" FOREIGN KEY ("ID_ESCUELA")
	  REFERENCES "ESCUELA" ("ID") ENABLE;
 
  ALTER TABLE "DOCENTE" ADD CONSTRAINT "FK_GRADO" FOREIGN KEY ("ID_GRADO")
	  REFERENCES "GRADO" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DOCUMENTO
--------------------------------------------------------

  ALTER TABLE "DOCUMENTO" ADD CONSTRAINT "FK_PROYECTO" FOREIGN KEY ("ID_PROYECTO")
	  REFERENCES "PROYECTO" ("ID") ENABLE;
 
  ALTER TABLE "DOCUMENTO" ADD CONSTRAINT "FK_TIPO_DOCUMENTO" FOREIGN KEY ("ID_TIPO_DOC")
	  REFERENCES "TIPO_DOCUMENTO" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ESCUELA
--------------------------------------------------------

  ALTER TABLE "ESCUELA" ADD CONSTRAINT "FK_FACULTAD" FOREIGN KEY ("ID_FACULTAD")
	  REFERENCES "FACULTAD" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ESTPROY
--------------------------------------------------------

  ALTER TABLE "ESTPROY" ADD CONSTRAINT "FK_ESTADO" FOREIGN KEY ("ID_ESTADO")
	  REFERENCES "ESTADO" ("ID") ENABLE;
 
  ALTER TABLE "ESTPROY" ADD CONSTRAINT "FK_PROJECT" FOREIGN KEY ("ID_PROYECT")
	  REFERENCES "PROYECTO" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ESTUDIANTE
--------------------------------------------------------

  ALTER TABLE "ESTUDIANTE" ADD CONSTRAINT "FK_ESC" FOREIGN KEY ("ID_ESCUELA")
	  REFERENCES "ESCUELA" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table FACULTAD
--------------------------------------------------------

  ALTER TABLE "FACULTAD" ADD CONSTRAINT "FK_UNI" FOREIGN KEY ("ID_UNIVERSIDAD")
	  REFERENCES "UNIVERSIDAD" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PROYDOC
--------------------------------------------------------

  ALTER TABLE "PROYDOC" ADD CONSTRAINT "FK_DOCENTE" FOREIGN KEY ("ID_DOCENTE")
	  REFERENCES "DOCENTE" ("ID") ENABLE;
 
  ALTER TABLE "PROYDOC" ADD CONSTRAINT "FK_PROY" FOREIGN KEY ("ID_PROYECTO")
	  REFERENCES "PROYECTO" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PROYECTO
--------------------------------------------------------

  ALTER TABLE "PROYECTO" ADD CONSTRAINT "FK_SOLICITANTE" FOREIGN KEY ("ID_SOLICITANTE")
	  REFERENCES "SOLICITANTE" ("ID") DISABLE;
--------------------------------------------------------
--  Ref Constraints for Table PROYEST
--------------------------------------------------------

  ALTER TABLE "PROYEST" ADD CONSTRAINT "FK_ESTUDIANTE" FOREIGN KEY ("ID_ESTUDIANTE")
	  REFERENCES "ESTUDIANTE" ("ID") ENABLE;
 
  ALTER TABLE "PROYEST" ADD CONSTRAINT "FK_PROYEC" FOREIGN KEY ("ID_PROYECTO")
	  REFERENCES "PROYECTO" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table SOLICITANTE
--------------------------------------------------------

  ALTER TABLE "SOLICITANTE" ADD CONSTRAINT "FK_UBIGEO" FOREIGN KEY ("CODIGO_UBIGEO")
	  REFERENCES "UBIGEO" ("CODIGO") ENABLE;
--------------------------------------------------------
--  DDL for Trigger IDDECANOTRIGGER
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "IDDECANOTRIGGER" 
before insert on decano
for each row 
begin
select SEQ_DECANO.NEXTVAL into:new.id from dual;
end;
/
ALTER TRIGGER "IDDECANOTRIGGER" ENABLE;
--------------------------------------------------------
--  DDL for Trigger IDDOCENTETRIGGER
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "IDDOCENTETRIGGER" 
before insert on docente
for each row 
begin
select SEQ_DOCENTE.NEXTVAL into:new.id from dual;
end;
/
ALTER TRIGGER "IDDOCENTETRIGGER" ENABLE;
--------------------------------------------------------
--  DDL for Trigger IDESCTRIGGER
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "IDESCTRIGGER" 
before insert on escuela
for each row 
begin
select SEQ_ESC.NEXTVAL into:new.id from dual;
end;
/
ALTER TRIGGER "IDESCTRIGGER" ENABLE;
--------------------------------------------------------
--  DDL for Trigger IDESTADOTRIGGER
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "IDESTADOTRIGGER" 
before insert on estado
for each row 
begin
select SEQ_ESTADO.NEXTVAL into:new.id from dual;
end;
/
ALTER TRIGGER "IDESTADOTRIGGER" ENABLE;
--------------------------------------------------------
--  DDL for Trigger IDESTUDIANTETRIGGER
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "IDESTUDIANTETRIGGER" 
before insert on estudiante
for each row 
begin
select SEQ_ALUM.NEXTVAL into:new.id from dual;
end;
/
ALTER TRIGGER "IDESTUDIANTETRIGGER" ENABLE;
--------------------------------------------------------
--  DDL for Trigger IDFACTRIGGER
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "IDFACTRIGGER" 
before insert on facultad
for each row 
begin
select SEQ_FAC.NEXTVAL into:new.id from dual;
end;
/
ALTER TRIGGER "IDFACTRIGGER" ENABLE;
--------------------------------------------------------
--  DDL for Trigger IDGRADOTRIGGER
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "IDGRADOTRIGGER" 
before insert on grado 
for each row 
begin
select SEQ_GRADO.NEXTVAL into:new.id from dual;
end;
/
ALTER TRIGGER "IDGRADOTRIGGER" ENABLE;
--------------------------------------------------------
--  DDL for Trigger IDPROYECTOTRIGGER
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "IDPROYECTOTRIGGER" 
before insert on PROYECTO
for each row 
begin
select SEQ_PROY.NEXTVAL into:new.id from dual;
end;
/
ALTER TRIGGER "IDPROYECTOTRIGGER" ENABLE;
--------------------------------------------------------
--  DDL for Trigger IDSOLITRIGGER
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "IDSOLITRIGGER" 
before insert on solicitante
for each row 
begin
select SEQ_SOLI.NEXTVAL into:new.id from dual;
end;
/
ALTER TRIGGER "IDSOLITRIGGER" ENABLE;
--------------------------------------------------------
--  DDL for Trigger IDTIPODOCTRIGGER
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "IDTIPODOCTRIGGER" 
before insert on tipo_documento
for each row 
begin
select SEQ_TIPO_DOC.NEXTVAL into:new.id from dual;
end;
/
ALTER TRIGGER "IDTIPODOCTRIGGER" ENABLE;
--------------------------------------------------------
--  DDL for Trigger IDUNITRIGGER
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "IDUNITRIGGER" 
before insert on universidad 
for each row 
begin
select SEQ_UNI.NEXTVAL into:new.id from dual;
end;
/
ALTER TRIGGER "IDUNITRIGGER" ENABLE;
--------------------------------------------------------
--  DDL for Function BEANANNOCURSO
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "BEANANNOCURSO" (idannocurso in number) RETURN types.ref_cursor AS
  acurso types.ref_cursor;
  query varchar2(1000);
begin    
  query:='SELECT /*+ CHOOSE */
  DISTINCT *
  FROM ANNO_CURSO
  WHERE ID=SYS_CONTEXT(''query_dinamica_annocurso'',''idannocurso'' )';
  dbms_session.set_context('query_dinamica_annocurso','idannocurso',idannocurso);
  OPEN acurso FOR query;
  return(acurso);
end beanannocurso;

/

--------------------------------------------------------
--  DDL for Function BEANDECANO
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "BEANDECANO" (iddecano in number) RETURN types.ref_cursor AS
  ddecano types.ref_cursor;
  query varchar2(1000);
begin    
  query:='SELECT /*+ CHOOSE */
  DISTINCT *
  FROM DECANO
  WHERE ID=SYS_CONTEXT(''query_dinamica_decano'',''iddecano'' )';
  dbms_session.set_context('query_dinamica_decano','iddecano',iddecano);
  OPEN ddecano FOR query;
  return(ddecano);
end beandecano;

/

--------------------------------------------------------
--  DDL for Function BEANDOCENTE
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "BEANDOCENTE" (iddocente in number) RETURN types.ref_cursor AS
  ddocente types.ref_cursor;
  query varchar2(1000);
begin    
  query:='SELECT /*+ CHOOSE */
  DISTINCT *
  FROM DOCENTE
  WHERE ID=SYS_CONTEXT(''query_dinamica_docente'',''iddocente'' )';
  dbms_session.set_context('query_dinamica_docente','iddocente',iddocente);
  OPEN ddocente FOR query;
  return(ddocente);
end beandocente;

/

--------------------------------------------------------
--  DDL for Function BEANDOCUMENTO
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "BEANDOCUMENTO" (anno in number,num in number,idtipodoc in number) RETURN types.ref_cursor AS
  refdocumento types.ref_cursor; 
  query varchar2(1000);
  begin
  query:= 'SELECT /*+ CH00SE */
  DISTINCT  
  NUMERO,
  ANNO,
  FECHA,
  PROCEDENCIA,
  ID_TIPO_DOC,
  ID_PROYECTO
  FROM DOCUMENTO
  WHERE ANNO=SYS_CONTEXT(''query_dinamica_documento'',''anno'' ) AND NUMERO=SYS_CONTEXT(''query_dinamica_documento'',''numero'' ) AND
  ID_TIPO_DOC=SYS_CONTEXT(''query_dinamica_documento'',''tipodoc'' )';
  dbms_session.set_context('query_dinamica_documento','anno',anno);
dbms_session.set_context('query_dinamica_documento','numero',num);
dbms_session.set_context('query_dinamica_documento','tipodoc',idtipodoc);
  OPEN refdocumento FOR query;
  return(refdocumento);
end beandocumento;

/

--------------------------------------------------------
--  DDL for Function BEANESCUELA
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "BEANESCUELA" (idescuela in number) RETURN types.ref_cursor AS
refescuela types.ref_cursor;
query varchar2(1000);
 begin
  query:= 'SELECT /*+ CH00SE */
  DISTINCT *
  FROM ESCUELA
  WHERE ID=SYS_CONTEXT(''query_dinamica_escuela'',''idescuela'' )';
  dbms_session.set_context('query_dinamica_escuela','idescuela',idescuela);
  OPEN refescuela FOR query;
  return(refescuela);
end beanescuela;

/

--------------------------------------------------------
--  DDL for Function BEANESTADO
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "BEANESTADO" (idestado in number) RETURN types.ref_cursor AS
refestado types.ref_cursor;
query varchar2(1000);
  begin
  query := 'SELECT /*+ CHOOSE */
  DISTINCT *
  FROM ESTADO
  WHERE ID=SYS_CONTEXT(''query_dinamica_estado'',''idestado'')';
  dbms_session.set_context('query_dinamica_estado','idestado',idestado);
  OPEN refestado FOR query;
  return(refestado);
end beanestado;

/

--------------------------------------------------------
--  DDL for Function BEANESTPROY
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "BEANESTPROY" (idestado in number, idproyect in number) RETURN types.ref_cursor AS
  refestproy types.ref_cursor;
  query varchar2(1000);
begin
  query := 'SELECT /*+ CHOOSE */
  DISTINCT *
  FROM ESTPROY
  WHERE ID_ESTADO=SYS_CONTEXT(''query_dinamica_estproy'',''idestado'') AND 
  ID_PROYECT=SYS_CONTEXT(''query_dinamica_estproy'',''idproyect'')';
  dbms_session.set_context('query_dinamica_estproy','idestado',idestado);
  dbms_session.set_context('query_dinamica_estproy','idproyect',idproyect);
  OPEN refestproy FOR query;
  return(refestproy);
end beanestproy;
  
/

--------------------------------------------------------
--  DDL for Function BEANESTUDIANTE
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "BEANESTUDIANTE" (idestudiante in number) RETURN types.ref_cursor AS
refestudiante types.ref_cursor;
  query varchar2(1000);
  begin
  query :='SELECT /*+ CHOOSE */
  DISTINCT *
  FROM ESTUDIANTE
  WHERE ID=SYS_CONTEXT(''query_dinamica_estudiante'',''idestudiante'')';
  dbms_session.set_context('query_dinamica_estudiante','idestudiante',idestudiante);
  OPEN refestudiante FOR query;
  return (refestudiante);
  end beanestudiante;

/

--------------------------------------------------------
--  DDL for Function BEANFACULTAD
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "BEANFACULTAD" (idfacultad in number) RETURN types.ref_cursor AS
reffacultad types.ref_cursor;
  query varchar2(1000);
  begin
  query :='SELECT /*+ CHOOSE */
  DISTINCT *
  FROM FACULTAD
  WHERE ID=SYS_CONTEXT(''query_dinamica_facultad'',''idfacultad'')';
  dbms_session.set_context('query_dinamica_facultad','idfacultad',idfacultad);
  OPEN reffacultad FOR query;
  return (reffacultad);
  end beanfacultad;

/

--------------------------------------------------------
--  DDL for Function BEANGRADO
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "BEANGRADO" (idgrado in number) RETURN types.ref_cursor AS
refgrado types.ref_cursor;
  query varchar2(1000);
  begin
  query :='SELECT /*+ CHOOSE */
  DISTINCT *
  FROM GRADO
  WHERE ID=SYS_CONTEXT(''query_dinamica_grado'',''idgrado'')';
  dbms_session.set_context('query_dinamica_grado','idgrado',idgrado);
  OPEN refgrado FOR query;
  return (refgrado);
  end beangrado;

/

--------------------------------------------------------
--  DDL for Function BEANPROYDOC
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "BEANPROYDOC" (idproyecto in number, iddocente in number) RETURN types.ref_cursor AS
refproydoc types.ref_cursor;
  query varchar2(1000);
  begin
  query :='SELECT /*+ CHOOSE */
  DISTINCT *
  FROM PROYDOC
  WHERE ID_PROYECTO=SYS_CONTEXT(''query_dinamica_proydoc'',''idproyecto'') AND 
  ID_DOCENTE=SYS_CONTEXT(''query_dinamica_proydoc'',''iddocente'')';
  dbms_session.set_context('query_dinamica_proydoc','idproyecto',idproyecto);
  dbms_session.set_context('query_dinamica_proydoc','iddocente',iddocente);
  OPEN refproydoc FOR query;
  return (refproydoc);
  end beanproydoc;

/

--------------------------------------------------------
--  DDL for Function BEANPROYECTO
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "BEANPROYECTO" (idproyecto in number) RETURN types.ref_cursor AS
refproyecto types.ref_cursor;
  query varchar2(1000);
  begin
  query :='SELECT /*+ CHOOSE */
  DISTINCT *
  FROM PROYECTO
  WHERE ID=SYS_CONTEXT(''query_dinamica_proyecto'',''idproyecto'')';
  dbms_session.set_context('query_dinamica_proyecto','idproyecto',idproyecto);
  OPEN refproyecto FOR query;
  return (refproyecto);
  end beanproyecto;

/

--------------------------------------------------------
--  DDL for Function BEANPROYEST
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "BEANPROYEST" (idproyecto in number, idestudiante in number) RETURN types.ref_cursor AS
refproyest types.ref_cursor;
  query varchar2(1000);
  begin
  query :='SELECT /*+ CHOOSE */
  DISTINCT *
  FROM PROYEST
  WHERE ID_PROYECTO=SYS_CONTEXT(''query_dinamica_proyest'',''idproyecto'') AND 
  ID_ESTUDIANTE=SYS_CONTEXT(''query_dinamica_proyest'',''idestudiante'')';
  dbms_session.set_context('query_dinamica_proyest','idproyecto',idproyecto);
  dbms_session.set_context('query_dinamica_proyest','idestudiante',idestudiante);
  OPEN refproyest FOR query;
  return (refproyest);
  end beanproyest;

/

--------------------------------------------------------
--  DDL for Function BEANSOLICITANTE
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "BEANSOLICITANTE" (idsolicitante in number) RETURN types.ref_cursor AS
  refsolicitante types.ref_cursor;
  query varchar2(1000);
begin    
  query:='SELECT /*+ CHOOSE */
  DISTINCT *
  FROM SOLICITANTE
  WHERE ID=SYS_CONTEXT(''query_dinamica_solicitante'',''idsolicitante'' )';
  dbms_session.set_context('query_dinamica_solicitante','idsolicitante',idsolicitante);
  OPEN refsolicitante FOR query;
  return(refsolicitante);
end beansolicitante;

/

--------------------------------------------------------
--  DDL for Function BEANTIPODOCUMENTO
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "BEANTIPODOCUMENTO" (idtipodocumento in number) RETURN types.ref_cursor AS
  reftipodocumento types.ref_cursor;
  query varchar2(1000);
begin    
  query:='SELECT /*+ CHOOSE */
  DISTINCT *
  FROM TIPO_DOCUMENTO
  WHERE ID=SYS_CONTEXT(''query_dinamica_tipodocumento'',''idtipodocumento'' )';
  dbms_session.set_context('query_dinamica_tipodocumento','idtipodocumento',idtipodocumento);
  OPEN reftipodocumento FOR query;
  return(reftipodocumento);
end beantipodocumento;

/

--------------------------------------------------------
--  DDL for Function BEANUBIGEO
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "BEANUBIGEO" (idubigeo in number) RETURN types.ref_cursor AS
  refubigeo types.ref_cursor;
  query varchar2(1000);
begin    
  query:='SELECT /*+ CHOOSE */
  DISTINCT *
  FROM UBIGEO
  WHERE CODIGO=SYS_CONTEXT(''query_dinamica_ubigeo'',''idubigeo'' )';
  dbms_session.set_context('query_dinamica_ubigeo','idubigeo',idubigeo);
  OPEN refubigeo FOR query;
  return(refubigeo);
end beanubigeo;

/

--------------------------------------------------------
--  DDL for Function BEANUNIVERSIDAD
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "BEANUNIVERSIDAD" (iduniversidad in number) RETURN types.ref_cursor AS
  uni types.ref_cursor;
  query varchar2(1000);
begin    
  query:='SELECT /*+ CHOOSE */
  DISTINCT *
  FROM UNIVERSIDAD
  WHERE ID=SYS_CONTEXT(''query_dinamica_universidad'',''iduni'' )';
  dbms_session.set_context('query_dinamica_universidad','iduni',iduniversidad);
  OPEN uni FOR query;
  return(uni);
end beanuniversidad;

/

--------------------------------------------------------
--  DDL for Function LISTARANNOCURSO
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "LISTARANNOCURSO" RETURN types.ref_cursor AS
  acurso types.ref_cursor;  
  query varchar2(1000);
begin  
  query:='SELECT /*+ CHOOSE */ DISTINCT * FROM anno_curso ORDER BY 1 ASC';      
  OPEN acurso FOR query;
  return(acurso);
end listarAnnoCurso;

/

--------------------------------------------------------
--  DDL for Function LISTARDECANO
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "LISTARDECANO" RETURN types.ref_cursor AS
  acurso types.ref_cursor;  
  query varchar2(2000);
begin  
  query:='SELECT /*+ CHOOSE */
DEC.ID AS IDDECANO,
dec.fechaini AS FECHA_INICIO,
dec.fechafin AS FECHA_FIN,
dec.estado_actual AS ESTADO_DECANO,
profe.id AS IDPROFE,
profe.appaterno AS PATERNO,
profe.apmaterno AS MATERNO,
profe.nombres AS NOMBRES,
esc.id AS IDESC,
esc.descripcion AS DESCESC,
fac.id AS ID_FACULTAD,
fac.descripcion AS DESCFAC,
fac.siglas AS SIGLASFAC,
uni.id as IDUNI,
uni.descripcion AS DESCUNI,
uni.siglas AS SIGLASUNI,
grad.id AS IDGRAD,
grad.descripcion AS DESCGRAD,
grad.siglas AS SIGLASGRAD
FROM DECANO DEC INNER JOIN DOCENTE PROFE ON DEC.ID_PROF=PROFE.ID
INNER JOIN ESCUELA ESC ON ESC.ID=PROFE.ID_ESCUELA INNER JOIN FACULTAD FAC ON
FAC.ID=dec.id_fac INNER JOIN UNIVERSIDAD UNI ON FAC.ID_UNIVERSIDAD=UNI.ID
INNER JOIN GRADO GRAD ON grad.id=profe.id_grado 
order by 1 desc';      
  OPEN acurso FOR query;
  return(acurso);
end listarDecano;

/

--------------------------------------------------------
--  DDL for Function LISTARDOCENTE
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "LISTARDOCENTE" (idfacultad in number) RETURN types.ref_cursor AS
  acurso types.ref_cursor;  
  query varchar2(1000);
begin
if(idfacultad=0) then
  query:='SELECT /*+ CHOOSE */ DISTINCT D.ID,D.NOMBRES,D.APPATERNO,D.APMATERNO,E.ID,E.DESCRIPCION,F.ID,F.DESCRIPCION,
  F.SIGLAS,U.ID,U.DESCRIPCION,U.SIGLAS,G.ID,G.DESCRIPCION,G.SIGLAS FROM DOCENTE D
  INNER JOIN ESCUELA E ON D.ID_ESCUELA=E.ID INNER JOIN FACULTAD F ON E.ID_FACULTAD=F.ID INNER JOIN GRADO G ON D.ID_GRADO=G.ID
  INNER JOIN UNIVERSIDAD U ON F.ID_UNIVERSIDAD=U.ID ORDER BY 1 DESC';    
  else
  query:='SELECT /*+ CHOOSE */ DISTINCT D.ID,D.NOMBRES,D.APPATERNO,D.APMATERNO,E.ID,E.DESCRIPCION,F.ID,F.DESCRIPCION,
  F.SIGLAS,U.ID,U.DESCRIPCION,U.SIGLAS,G.ID,G.DESCRIPCION,G.SIGLAS FROM DOCENTE D
  INNER JOIN ESCUELA E ON D.ID_ESCUELA=E.ID INNER JOIN FACULTAD F ON E.ID_FACULTAD=F.ID INNER JOIN GRADO G ON D.ID_GRADO=G.ID
  INNER JOIN UNIVERSIDAD U ON F.ID_UNIVERSIDAD=U.ID WHERE F.ID=SYS_CONTEXT(''query_listar_docente'',''idfacultad'' ) ORDER BY 1 DESC';      
  dbms_session.set_context('query_listar_docente','idfacultad',idfacultad);
  end if;
  OPEN acurso FOR query;
  return(acurso);
end listarDocente;

/

--------------------------------------------------------
--  DDL for Function LISTARDOCUMENTOS
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "LISTARDOCUMENTOS" (idProyecto in number) RETURN types.ref_cursor AS
  acurso types.ref_cursor;  
  query varchar2(1000);
begin
query:='SELECT doc.anno,doc.numero,doc.fecha,doc.procedencia,doc.id_tipo_doc,
td.descripcion,td.siglas,doc.id_proyecto,proy.descripcion,proy.fecha_sol
FROM DOCUMENTO DOC INNER JOIN TIPO_DOCUMENTO TD ON doc.id_tipo_doc=td.id
inner join proyecto proy on proy.id=doc.id_proyecto
where doc.id_proyecto=SYS_CONTEXT(''query_list_documento'',''idProy'')';  
  dbms_session.set_context('query_list_documento','idProy',idProyecto);    
  OPEN acurso FOR query;
  return(acurso);
end listarDocumentos;

/

--------------------------------------------------------
--  DDL for Function LISTARESCUELA
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "LISTARESCUELA" (idFacu in number) RETURN types.ref_cursor AS
  acurso types.ref_cursor;  
  query varchar2(1000);
begin
  if (idFacu=0) then
  query:='SELECT /*+ CHOOSE */ DISTINCT E.ID,E.DESCRIPCION,F.ID,F.DESCRIPCION,F.SIGLAS,U.ID,U.DESCRIPCION,U.SIGLAS
  FROM ESCUELA E INNER JOIN FACULTAD F ON E.ID_FACULTAD=F.ID
  INNER JOIN UNIVERSIDAD U ON U.ID=F.ID_UNIVERSIDAD ORDER BY 2 ASC';  
  ELSE
  query:='SELECT /*+ CHOOSE */ DISTINCT E.ID,E.DESCRIPCION,F.ID,F.DESCRIPCION,F.SIGLAS,U.ID,U.DESCRIPCION,U.SIGLAS
  FROM ESCUELA E INNER JOIN FACULTAD F ON E.ID_FACULTAD=F.ID
  INNER JOIN UNIVERSIDAD U ON U.ID=F.ID_UNIVERSIDAD
  WHERE E.ID_FACULTAD=SYS_CONTEXT(''query_list_escuela'',''idFacu'') ORDER BY 2 ASC';  
  dbms_session.set_context('query_list_escuela','idFacu',idFacu);  
  end if;   
  OPEN acurso FOR query;
  return(acurso);
end listarEscuela;

/

--------------------------------------------------------
--  DDL for Function LISTARESTADO
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "LISTARESTADO" RETURN types.ref_cursor AS
  acurso types.ref_cursor;  
  query varchar2(1000);
begin  
  query:='SELECT /*+ CHOOSE */ DISTINCT * FROM ESTADO ORDER BY 1 ASC';      
  OPEN acurso FOR query;
  return(acurso);
end listarEstado;

/

--------------------------------------------------------
--  DDL for Function LISTARESTPROY
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "LISTARESTPROY" (
      idProyecto IN NUMBER)
    RETURN types.ref_cursor
  AS
    acurso types.ref_cursor;
    query VARCHAR2(1000);
  BEGIN
    query:='SELECT ep.estado_actual,ep.id_estado,e.descripcion,ep.fecha,proy.id FROM ESTPROY EP INNER JOIN ESTADO E ON e.id=ep.id_estado
INNER JOIN PROYECTO PROY ON proy.id=ep.id_proyect
WHERE ep.id_proyect=SYS_CONTEXT(''query_list_estadoproy'',''idProy'')';
    dbms_session.set_context('query_list_estadoproy','idProy',idProyecto);
    OPEN acurso FOR query;
    RETURN(acurso);
  END listarEstProy;

/

--------------------------------------------------------
--  DDL for Function LISTARESTUDIANTE
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "LISTARESTUDIANTE" RETURN types.ref_cursor AS
  acurso types.ref_cursor;  
  query varchar2(1000);
begin  
  query:='SELECT /*+ CHOOSE */ DISTINCT EST.ID,EST.NOMBRES,EST.APPATERNO,EST.APMATERNO,EST.CODIGOUNIV,E.ID,E.DESCRIPCION,F.ID,F.DESCRIPCION,
  F.SIGLAS,U.ID,U.DESCRIPCION,U.SIGLAS FROM ESTUDIANTE EST
  INNER JOIN ESCUELA E ON EST.ID_ESCUELA=E.ID INNER JOIN FACULTAD F ON E.ID_FACULTAD=F.ID 
  INNER JOIN UNIVERSIDAD U ON F.ID_UNIVERSIDAD=U.ID ORDER BY 1 DESC';      
  OPEN acurso FOR query;
  return(acurso);
end listarEstudiante;

/

--------------------------------------------------------
--  DDL for Function LISTARFACULTAD
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "LISTARFACULTAD" (idUni in number) RETURN types.ref_cursor AS
  acurso types.ref_cursor;  
  query varchar2(1000);
begin
  if (idUni=0) then
  query:='SELECT /*+ CHOOSE */ DISTINCT F.ID,F.DESCRIPCION,F.SIGLAS,U.ID,U.DESCRIPCION,U.SIGLAS FROM FACULTAD F INNER JOIN UNIVERSIDAD U ON F.ID_UNIVERSIDAD=U.ID ORDER BY 3 ASC';  
  ELSE
  query:='SELECT /*+ CHOOSE */ DISTINCT F.ID,F.DESCRIPCION,F.SIGLAS,U.ID,U.DESCRIPCION,U.SIGLAS FROM FACULTAD F INNER JOIN UNIVERSIDAD U ON F.ID_UNIVERSIDAD=U.ID
  WHERE F.ID_UNIVERSIDAD=SYS_CONTEXT(''query_list_facultad'',''idUni'') ORDER BY 3 ASC';  
  dbms_session.set_context('query_list_facultad','idUni',idUni);  
  end if;   
  OPEN acurso FOR query;
  return(acurso);
end listarFacultad;

/

--------------------------------------------------------
--  DDL for Function LISTARGRADO
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "LISTARGRADO" RETURN types.ref_cursor AS
  acurso types.ref_cursor;  
  query varchar2(1000);
begin  
  query:='SELECT /*+ CHOOSE */ DISTINCT * FROM GRADO ORDER BY 2 ASC';      
  OPEN acurso FOR query;
  return(acurso);
end listarGrado;

/

--------------------------------------------------------
--  DDL for Function LISTARPROYDOC
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "LISTARPROYDOC" (
      idProyecto IN NUMBER)
    RETURN types.ref_cursor
  AS
    acurso types.ref_cursor;
    query VARCHAR2(1000);
  BEGIN
    query:='SELECT d.id,d.nombres,d.appaterno,d.apmaterno,d.id_escuela,esc.descripcion,esc.id_facultad,fac.siglas,proy.id
    FROM PROYDOC PD INNER JOIN DOCENTE D ON pd.id_docente=d.id INNER JOIN PROYECTO PROY ON
proy.id=pd.id_proyecto INNER JOIN ESCUELA ESC ON esc.id=d.id_escuela INNER JOIN FACULTAD FAC ON
FAC.ID=esc.id_facultad
WHERE pd.id_proyecto=SYS_CONTEXT(''query_list_proydoc'',''idProy'')';
    dbms_session.set_context('query_list_proydoc','idProy',idProyecto);
    OPEN acurso FOR query;
    RETURN(acurso);
  END listarProyDoc;

/

--------------------------------------------------------
--  DDL for Function LISTARPROYECTO
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "LISTARPROYECTO" RETURN types.ref_cursor AS
  acurso types.ref_cursor;  
  query varchar2(1000);
begin  
  query:='SELECT /*+ CHOOSE */ DISTINCT * FROM proyecto ';      
  OPEN acurso FOR query;
  return(acurso);
end listarProyecto;

/

--------------------------------------------------------
--  DDL for Function LISTARPROYECTODOCENTE
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "LISTARPROYECTODOCENTE" (iddocente IN NUMBER) RETURN types.ref_cursor AS
  acurso types.ref_cursor;  
  query varchar2(1000);
begin    
  OPEN acurso FOR 
  SELECT PRO.* FROM PROYECTO PRO INNER JOIN PROYDOC PD ON
  PD.ID_PROYECTO=PRO.ID AND pd.id_docente=iddocente;
  return(acurso);
end listarProyectoDocente;

/

--------------------------------------------------------
--  DDL for Function LISTARPROYECTOESTUDIANTE
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "LISTARPROYECTOESTUDIANTE" (idestudiante IN NUMBER) RETURN types.ref_cursor AS
  acurso types.ref_cursor;  
begin    
  OPEN acurso FOR 
  SELECT PRO.* FROM PROYECTO PRO INNER JOIN PROYEST PE ON
  PE.ID_PROYECTO=PRO.ID AND pe.id_estudiante=idestudiante;
  return(acurso);
end listarProyectoEstudiante;

/

--------------------------------------------------------
--  DDL for Function LISTARPROYECTOSOLICITANTE
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "LISTARPROYECTOSOLICITANTE" (idsol IN NUMBER) RETURN types.ref_cursor AS
  acurso types.ref_cursor;  
begin    
  OPEN acurso FOR 
  SELECT PRO.* FROM PROYECTO PRO 
  WHERE pro.id_solicitante=idsol;
  return(acurso);
end listarProyectoSolicitante;

/

--------------------------------------------------------
--  DDL for Function LISTARPROYEST
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "LISTARPROYEST" (
      idProyecto IN NUMBER)
    RETURN types.ref_cursor
  AS
    acurso types.ref_cursor;
    query VARCHAR2(1000);
  BEGIN
    query:='SELECT pe.id_estudiante,e.nombres,e.appaterno,e.apmaterno,e.codigouniv,e.id_escuela,
    esc.descripcion,esc.id_facultad,fac.siglas,pe.id_proyecto FROM PROYEST PE INNER JOIN ESTUDIANTE E ON PE.ID_ESTUDIANTE=E.ID
    INNER JOIN PROYECTO PROY ON PROY.ID=PE.ID_PROYECTO INNER JOIN ESCUELA ESC ON esc.id=e.id_escuela INNER JOIN FACULTAD FAC
    ON fac.id=esc.id_facultad
    where pe.id_proyecto=SYS_CONTEXT(''query_list_proyest'',''idProy'')';
    dbms_session.set_context('query_list_proyest','idProy',idProyecto);
    OPEN acurso FOR query;
    RETURN(acurso);
  END listarProyEst;

/

--------------------------------------------------------
--  DDL for Function LISTARSOLICITANTE
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "LISTARSOLICITANTE" RETURN types.ref_cursor AS
  acurso types.ref_cursor;  
  query varchar2(1000);
begin
  query:='SELECT s.id,s.razon_social,s.codigo_ubigeo,u.departamento,u.provincia,u.distrito,s.ruc,s.direccion 
  FROM SOLICITANTE S INNER JOIN UBIGEO U ON s.codigo_ubigeo=u.codigo ORDER BY 1 DESC';
  OPEN acurso FOR query;
  return(acurso);
end listarSolicitante;

/

--------------------------------------------------------
--  DDL for Function LISTARTIPODOCUMENTO
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "LISTARTIPODOCUMENTO" RETURN types.ref_cursor AS
  acurso types.ref_cursor;  
  query varchar2(1000);
begin  
  query:='SELECT /*+ CHOOSE */ DISTINCT * FROM tipo_documento ORDER BY 1 ASC';      
  OPEN acurso FOR query;
  return(acurso);
end listarTipoDocumento;

/

--------------------------------------------------------
--  DDL for Function LISTARUBIGEO
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "LISTARUBIGEO" (depart in varchar2,prov in varchar2,distr in varchar2) RETURN types.ref_cursor AS
  acurso types.ref_cursor;  
  query varchar2(1000);
begin
  if (depart='0' and prov='0' and distr='0') then
  query:='SELECT /*+ CHOOSE */ DISTINCT DEPARTAMENTO FROM UBIGEO ORDER BY 1 ASC';  
  ELSIF (length(depart)>0 and prov='0' and distr='0') then
  query:= 'SELECT /*+ CHOOSE */ DISTINCT PROVINCIA FROM UBIGEO WHERE DEPARTAMENTO=SYS_CONTEXT(''query_list_ubigeo'',''depart'') ORDER BY 1 ASC';  
  dbms_session.set_context('query_list_ubigeo','depart',depart);
  ELSIF(length(depart)>0 and LENGTH(prov)>0 and distr='0') then
  query:= 'SELECT /*+ CHOOSE */ DISTINCT DISTRITO FROM UBIGEO WHERE DEPARTAMENTO=SYS_CONTEXT(''query_list_ubigeo'',''depart'') and PROVINCIA=SYS_CONTEXT(''query_list_ubigeo'',''prov'') ORDER BY 1 ASC';  
  dbms_session.set_context('query_list_ubigeo','depart',depart);
  dbms_session.set_context('query_list_ubigeo','prov',prov);
  ELSIF (length(depart)>0 and LENGTH(prov)>0 and LENGTH(distr)>0) then
  query:= 'SELECT /*+ CHOOSE */ DISTINCT * FROM UBIGEO WHERE DEPARTAMENTO=SYS_CONTEXT(''query_list_ubigeo'',''depart'') and PROVINCIA=SYS_CONTEXT(''query_list_ubigeo'',''prov'') and distrito=SYS_CONTEXT(''query_list_ubigeo'',''distr'') ORDER BY 2,3,4 ASC';  
  dbms_session.set_context('query_list_ubigeo','depart',depart);
  dbms_session.set_context('query_list_ubigeo','prov',prov);
  dbms_session.set_context('query_list_ubigeo','distr',distr);
  end if;   
  OPEN acurso FOR query;
  return(acurso);
end listarUbigeo;

/

--------------------------------------------------------
--  DDL for Function MANTANNOCURSO
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "MANTANNOCURSO" (
      idannocurso IN NUMBER,
      descripcion IN VARCHAR2,
      estado      IN VARCHAR2,
      operacion   IN NUMBER)
    RETURN NUMBER
  AS
    contador NUMBER;
  BEGIN
    IF(operacion = 1)THEN
      dbms_session.set_context('query_mant_annocurso','idanno',idannocurso);
      dbms_session.set_context('query_mant_annocurso','desc',descripcion);
      dbms_session.set_context('query_mant_annocurso','est',estado);
      IF(estado='A') THEN
        SELECT COUNT(*) INTO contador FROM anno_curso WHERE ESTADO_ACTUAL='A';
        IF(contador>0) THEN
          UPDATE ANNO_CURSO SET ESTADO_ACTUAL='D' WHERE ESTADO_ACTUAL='A';
          INSERT
          INTO ANNO_CURSO
            (
              ID,
              DESCRIPCION,
              ESTADO_ACTUAL
            )
            VALUES
            (
              SYS_CONTEXT('query_mant_annocurso','idanno'),
              SYS_CONTEXT('query_mant_annocurso','desc'),
              SYS_CONTEXT('query_mant_annocurso','est')
            );
        ELSE
          INSERT
          INTO ANNO_CURSO
            (
              ID,
              DESCRIPCION,
              ESTADO_ACTUAL
            )
            VALUES
            (
              SYS_CONTEXT('query_mant_annocurso','idanno'),
              SYS_CONTEXT('query_mant_annocurso','desc'),
              SYS_CONTEXT('query_mant_annocurso','est')
            );
        END IF;
      ELSE
        INSERT
        INTO ANNO_CURSO
          (
            ID,
            DESCRIPCION,
            ESTADO_ACTUAL
          )
          VALUES
          (
            SYS_CONTEXT('query_mant_annocurso','idanno'),
            SYS_CONTEXT('query_mant_annocurso','desc'),
            SYS_CONTEXT('query_mant_annocurso','est')
          );
      END IF;
              COMMIT;
          RETURN 1;
    elsif
      (
        operacion = 2
      )
      THEN
      dbms_session.set_context
      (
        'query_mant_annocurso','idanno',idannocurso
      )
      ;
      dbms_session.set_context
      (
        'query_mant_annocurso','desc',descripcion
      )
      ;
      dbms_session.set_context
      (
        'query_mant_annocurso','est',estado
      )
      ;
      IF
        (
          estado='A'
        )
        THEN
        SELECT COUNT(*) INTO contador FROM anno_curso WHERE ESTADO_ACTUAL='A';
        IF(contador>0) THEN
          UPDATE ANNO_CURSO SET ESTADO_ACTUAL='D' WHERE ESTADO_ACTUAL='A';
          UPDATE ANNO_CURSO
          SET DESCRIPCION = SYS_CONTEXT('query_mant_annocurso','desc'),
            ESTADO_ACTUAL = SYS_CONTEXT('query_mant_annocurso','est')
          WHERE ID        = SYS_CONTEXT('query_mant_annocurso','idanno');
        ELSE
          UPDATE ANNO_CURSO
          SET DESCRIPCION = SYS_CONTEXT('query_mant_annocurso','desc'),
            ESTADO_ACTUAL = SYS_CONTEXT('query_mant_annocurso','est')
          WHERE ID        = SYS_CONTEXT('query_mant_annocurso','idanno');
        END IF;
      ELSE
        UPDATE ANNO_CURSO
        SET DESCRIPCION = SYS_CONTEXT('query_mant_annocurso','desc'),
          ESTADO_ACTUAL = SYS_CONTEXT('query_mant_annocurso','est')
        WHERE ID        = SYS_CONTEXT('query_mant_annocurso','idanno');
      END IF;
      COMMIT;
      RETURN 2;
    elsif(operacion = 3) THEN
      dbms_session.set_context('query_mant_annocurso','idanno',idannocurso);
      DELETE
      FROM ANNO_CURSO
      WHERE ID = SYS_CONTEXT('query_mant_annocurso','idanno');
      COMMIT;
      RETURN 3;
    ELSE
      RETURN 0;
    END IF;
  EXCEPTION
  WHEN NO_DATA_FOUND THEN
    RETURN -1;
  WHEN OTHERS THEN
    RETURN -1;
  END mantannocurso;

/

--------------------------------------------------------
--  DDL for Function MANTDECANO
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "MANTDECANO" (iddecano in number, iddocente in number,idfacultad in number, ini in date, fin in date,estado in varchar2, operacion in number) return number
AS
auxiddecano number;
contador number;
begin  
auxiddecano:=0;
if(operacion = 1)then
dbms_session.set_context('query_mant_decano','iddocente',iddocente);
dbms_session.set_context('query_mant_decano','idfac',idfacultad);
dbms_session.set_context('query_mant_decano','fechaini',ini);
dbms_session.set_context('query_mant_decano','fechafin',fin);
dbms_session.set_context('query_mant_decano','est',estado);
if(ini<=fin)then
if(estado='A')then
select count(*) into contador from decano where id_fac=idfacultad and estado_actual=estado;
if(contador>0)then
update decano set estado_actual='D' where id_fac=idfacultad and estado_actual='A';
INSERT INTO DECANO (ID_PROF,ID_FAC,FECHAINI,FECHAFIN,ESTADO_ACTUAL) VALUES (SYS_CONTEXT('query_mant_decano','iddocente'),
SYS_CONTEXT('query_mant_decano','idfac'),SYS_CONTEXT('query_mant_decano','fechaini'),SYS_CONTEXT('query_mant_decano','fechafin'),
SYS_CONTEXT('query_mant_decano','est'));
else 
INSERT INTO DECANO (ID_PROF,ID_FAC,FECHAINI,FECHAFIN,ESTADO_ACTUAL) VALUES (SYS_CONTEXT('query_mant_decano','iddocente'),
SYS_CONTEXT('query_mant_decano','idfac'),SYS_CONTEXT('query_mant_decano','fechaini'),SYS_CONTEXT('query_mant_decano','fechafin'),
SYS_CONTEXT('query_mant_decano','est'));
end if;
else
INSERT INTO DECANO (ID_PROF,ID_FAC,FECHAINI,FECHAFIN,ESTADO_ACTUAL) VALUES (SYS_CONTEXT('query_mant_decano','iddocente'),
SYS_CONTEXT('query_mant_decano','idfac'),SYS_CONTEXT('query_mant_decano','fechaini'),SYS_CONTEXT('query_mant_decano','fechafin'),
SYS_CONTEXT('query_mant_decano','est'));
end if;
commit;
return 1;
else
return -1;
end if;
elsif(operacion = 2)then
dbms_session.set_context('query_mant_decano','iddecano',iddecano);
dbms_session.set_context('query_mant_decano','iddocente',iddocente);
dbms_session.set_context('query_mant_decano','idfac',idfacultad);
dbms_session.set_context('query_mant_decano','fechaini',ini);
dbms_session.set_context('query_mant_decano','fechafin',fin);
dbms_session.set_context('query_mant_decano','est',estado);
if(ini<=fin) then
if(estado='A') then
select count(*) into contador from decano where id_fac=idfacultad and estado_actual=estado;
if(contador>0)then
update decano set estado_actual='D' where id_fac=idfacultad and estado_actual='A';
UPDATE DECANO SET ID_PROF = SYS_CONTEXT('query_mant_decano','iddocente'), 
ID_FAC=SYS_CONTEXT('query_mant_decano','idfac'),FECHAINI=SYS_CONTEXT('query_mant_decano','fechaini'),
FECHAFIN=SYS_CONTEXT('query_mant_decano','fechafin'),ESTADO_ACTUAL=SYS_CONTEXT('query_mant_decano','est')
where id = SYS_CONTEXT('query_mant_decano','iddecano');
else 
UPDATE DECANO SET ID_PROF = SYS_CONTEXT('query_mant_decano','iddocente'), 
ID_FAC=SYS_CONTEXT('query_mant_decano','idfac'),FECHAINI=SYS_CONTEXT('query_mant_decano','fechaini'),
FECHAFIN=SYS_CONTEXT('query_mant_decano','fechafin'),ESTADO_ACTUAL=SYS_CONTEXT('query_mant_decano','est')
where id = SYS_CONTEXT('query_mant_decano','iddecano');
end if;
else
UPDATE DECANO SET ID_PROF = SYS_CONTEXT('query_mant_decano','iddocente'), 
ID_FAC=SYS_CONTEXT('query_mant_decano','idfac'),FECHAINI=SYS_CONTEXT('query_mant_decano','fechaini'),
FECHAFIN=SYS_CONTEXT('query_mant_decano','fechafin'),ESTADO_ACTUAL=SYS_CONTEXT('query_mant_decano','est')
where id = SYS_CONTEXT('query_mant_decano','iddecano');
end if;
commit;
return 2;
else 
return -1;
end if;
elsif(operacion = 3) then
dbms_session.set_context('query_mant_decano','iddecano',iddecano);
DELETE from DECANO where id = SYS_CONTEXT('query_mant_decano','iddecano');
commit;
return 3;
else 
return 0;
end if;
exception 
WHEN NO_DATA_FOUND THEN 
return -1;
WHEN OTHERS THEN
return -1;
end mantdecano;

/

--------------------------------------------------------
--  DDL for Function MANTDOCENTE
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "MANTDOCENTE" (iddocen in number, nombres in varchar2,appaterno in varchar2, apmaterno in varchar2, idesc in number, idgrado in number, operacion in number) return number
AS
begin   
if(operacion = 1)then
dbms_session.set_context('query_mant_docente','nom',nombres);
dbms_session.set_context('query_mant_docente','paterno',appaterno);
dbms_session.set_context('query_mant_docente','materno',apmaterno);
dbms_session.set_context('query_mant_docente','escuela',idesc);
dbms_session.set_context('query_mant_docente','grado',idgrado);
INSERT INTO DOCENTE (NOMBRES,APPATERNO,APMATERNO,ID_ESCUELA,ID_GRADO) VALUES (SYS_CONTEXT('query_mant_docente','nom'),
SYS_CONTEXT('query_mant_docente','paterno'),SYS_CONTEXT('query_mant_docente','materno'),SYS_CONTEXT('query_mant_docente','escuela'),
SYS_CONTEXT('query_mant_docente','grado'));
commit;
return 1;
elsif(operacion = 2)then
dbms_session.set_context('query_mant_docente','iddocente',iddocen);
dbms_session.set_context('query_mant_docente','nom',nombres);
dbms_session.set_context('query_mant_docente','paterno',appaterno);
dbms_session.set_context('query_mant_docente','materno',apmaterno);
dbms_session.set_context('query_mant_docente','escuela',idesc);
dbms_session.set_context('query_mant_docente','grado',idgrado);
UPDATE DOCENTE SET NOMBRES = SYS_CONTEXT('query_mant_docente','nom'), 
APPATERNO=SYS_CONTEXT('query_mant_docente','paterno'),apmaterno=SYS_CONTEXT('query_mant_docente','materno'),
id_escuela=SYS_CONTEXT('query_mant_docente','escuela'),id_grado=SYS_CONTEXT('query_mant_docente','grado')
where id = SYS_CONTEXT('query_mant_docente','iddocente');
commit;
return 2;
elsif(operacion = 3) then
dbms_session.set_context('query_mant_docente','iddocente',iddocen);
DELETE from DOCENTE where id = SYS_CONTEXT('query_mant_docente','iddocente');
commit;
return 3;
else 
return 0;
end if;
exception 
WHEN NO_DATA_FOUND THEN 
return -1;
WHEN OTHERS THEN
return -1;
end mantdocente;

/

--------------------------------------------------------
--  DDL for Function MANTDOCUMENTO
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "MANTDOCUMENTO" (anno in number, num in number, fecha in date,procedencia in varchar2,idtipodoc in number,idproyecto in number,operacion in number) return number
AS
begin   
if(operacion = 1)then
dbms_session.set_context('query_mant_documento','anno',anno);
dbms_session.set_context('query_mant_documento','numero',num);
dbms_session.set_context('query_mant_documento','fech',fecha);
dbms_session.set_context('query_mant_documento','proc',procedencia);
dbms_session.set_context('query_mant_documento','tipodoc',idtipodoc);
dbms_session.set_context('query_mant_documento','idproy',idproyecto);
INSERT INTO DOCUMENTO (ID_TIPO_DOC,ANNO,NUMERO,FECHA,PROCEDENCIA,ID_PROYECTO) VALUES (
SYS_CONTEXT('query_mant_documento','tipodoc'),SYS_CONTEXT('query_mant_documento','anno'),
SYS_CONTEXT('query_mant_documento','numero'),SYS_CONTEXT('query_mant_documento','fech'),SYS_CONTEXT('query_mant_documento','proc'),
SYS_CONTEXT('query_mant_documento','idproy'));
commit;
return 1;
elsif(operacion = 2)then
dbms_session.set_context('query_mant_documento','anno',anno);
dbms_session.set_context('query_mant_documento','numero',num);
dbms_session.set_context('query_mant_documento','fecha',fecha);
dbms_session.set_context('query_mant_documento','proc',procedencia);
dbms_session.set_context('query_mant_documento','tipodoc',idtipodoc);
dbms_session.set_context('query_mant_documento','idproy',idproyecto);
UPDATE DOCUMENTO SET 
FECHA = SYS_CONTEXT('query_mant_documento','fecha'),
PROCEDENCIA = SYS_CONTEXT('query_mant_documento','proc'),
ID_PROYECTO=SYS_CONTEXT('query_mant_documento','idproy')
where ANNO = SYS_CONTEXT('query_mant_documento','anno') AND NUMERO = SYS_CONTEXT('query_mant_documento','numero')
AND ID_TIPO_DOC = SYS_CONTEXT('query_mant_documento','tipodoc');
commit;
return 2;
elsif(operacion = 3) then
dbms_session.set_context('query_mant_documento','anno',anno);
dbms_session.set_context('query_mant_documento','numero',num);
dbms_session.set_context('query_mant_documento','tipodoc',idtipodoc);
DELETE from DOCUMENTO where ANNO = SYS_CONTEXT('query_mant_documento','anno') AND NUMERO = SYS_CONTEXT('query_mant_documento','numero')
AND ID_TIPO_DOC = SYS_CONTEXT('query_mant_documento','tipodoc');
commit;
return 3;
else 
return 0;
end if;
exception 
WHEN NO_DATA_FOUND THEN 
return -1;
WHEN OTHERS THEN
return -1;
end mantdocumento;

/

--------------------------------------------------------
--  DDL for Function MANTESCUELA
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "MANTESCUELA" (idesc in number, descripcion in varchar2,idfac in number, operacion in number) return number
AS
begin   
if(operacion = 1)then
dbms_session.set_context('query_mant_escuela','desc',descripcion);
dbms_session.set_context('query_mant_escuela','idfacu',idfac);
INSERT INTO ESCUELA (DESCRIPCION,ID_FACULTAD) VALUES (SYS_CONTEXT('query_mant_escuela','desc'),
SYS_CONTEXT('query_mant_escuela','idfacu'));
commit;
return 1;
elsif(operacion = 2)then
dbms_session.set_context('query_mant_escuela','idescue',idesc);
dbms_session.set_context('query_mant_escuela','desc',descripcion);
dbms_session.set_context('query_mant_escuela','idfacu',idfac);
UPDATE ESCUELA SET descripcion = SYS_CONTEXT('query_mant_escuela','desc'), 
id_facultad=SYS_CONTEXT('query_mant_escuela','idfacu')
where id = SYS_CONTEXT('query_mant_escuela','idescue');
commit;
return 2;
elsif(operacion = 3) then
dbms_session.set_context('query_mant_escuela','idescue',idesc);
DELETE from ESCUELA where id = SYS_CONTEXT('query_mant_escuela','idescue');
commit;
return 3;
else 
return 0;
end if;
exception 
WHEN NO_DATA_FOUND THEN 
return -1;
WHEN OTHERS THEN
return -1;
end mantescuela;

/

--------------------------------------------------------
--  DDL for Function MANTESTADO
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "MANTESTADO" (idestado in number, descripcion in varchar2, operacion in number) return number
AS
begin   
if(operacion = 1)then
dbms_session.set_context('query_mant_estado','desc',descripcion);
INSERT INTO ESTADO (DESCRIPCION) VALUES (SYS_CONTEXT('query_mant_estado','desc'));
commit;
return 1;
elsif(operacion = 2)then
dbms_session.set_context('query_mant_estado','idest',idestado);
dbms_session.set_context('query_mant_estado','desc',descripcion);
UPDATE ESTADO SET DESCRIPCION = SYS_CONTEXT('query_mant_estado','desc')
where id = SYS_CONTEXT('query_mant_estado','idest');
commit;
return 2;
elsif(operacion = 3) then
dbms_session.set_context('query_mant_estado','idest',idestado);
DELETE from estado where id = SYS_CONTEXT('query_mant_estado','idest');
commit;
return 3;
else 
return 0;
end if;
exception 
WHEN NO_DATA_FOUND THEN 
return -1;
WHEN OTHERS THEN
return -1;
end mantestado;

/

--------------------------------------------------------
--  DDL for Function MANTESTPROY
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "MANTESTPROY" (idestado in number, idproyecto in number, estadoactual in varchar2, fecha in date, operacion in number) return number
AS
maxfecha date;
begin   
if(operacion = 1)then
dbms_session.set_context('query_mant_estproy','idestado',idestado);
dbms_session.set_context('query_mant_estproy','idproyecto',idproyecto);
dbms_session.set_context('query_mant_estproy','estado',estadoactual);
dbms_session.set_context('query_mant_estproy','fecha',fecha);
INSERT INTO estproy(id_estado, id_proyect, estado_actual, fecha) VALUES (SYS_CONTEXT('query_mant_estproy','idestado'),
SYS_CONTEXT('query_mant_estproy','idproyecto'), SYS_CONTEXT('query_mant_estproy','estado'), SYS_CONTEXT('query_mant_estproy','fecha'));
commit;
select max(fecha) into maxfecha from estproy where id_proyect=SYS_CONTEXT('query_mant_estproy','idproyecto');
update estproy set estado_actual='D' where id_proyect=SYS_CONTEXT('query_mant_estproy','idproyecto');
update estproy set estado_actual='A' where id_proyect=SYS_CONTEXT('query_mant_estproy','idproyecto') and fecha=maxfecha;
commit;
return 1;
elsif(operacion = 2)then
dbms_session.set_context('query_mant_estproy','idestado',idestado);
dbms_session.set_context('query_mant_estproy','idproyecto',idproyecto);
dbms_session.set_context('query_mant_estproy','estado',estadoactual);
dbms_session.set_context('query_mant_estproy','fecha',fecha);
UPDATE estproy SET estado_actual = SYS_CONTEXT('query_mant_estproy','estado'), fecha = SYS_CONTEXT('query_mant_estproy','fecha')
where id_estado = SYS_CONTEXT('query_mant_estproy','idestado') and id_proyect = SYS_CONTEXT('query_mant_estproy','idproyecto');
commit;
select max(fecha) into maxfecha from estproy where id_proyect=SYS_CONTEXT('query_mant_estproy','idproyecto');
update estproy set estado_actual='D' where id_proyect=SYS_CONTEXT('query_mant_estproy','idproyecto');
update estproy set estado_actual='A' where id_proyect=SYS_CONTEXT('query_mant_estproy','idproyecto') and fecha=maxfecha;
commit;
return 2;
elsif(operacion = 3) then
dbms_session.set_context('query_mant_estproy','idestado',idestado);
dbms_session.set_context('query_mant_estproy','idproyecto',idproyecto);
DELETE from estproy where id_estado = SYS_CONTEXT('query_mant_estproy','idestado')
 and id_proyect = SYS_CONTEXT('query_mant_estproy','idproyecto');
commit;
select max(fecha) into maxfecha from estproy where id_proyect=SYS_CONTEXT('query_mant_estproy','idproyecto');
update estproy set estado_actual='D' where id_proyect=SYS_CONTEXT('query_mant_estproy','idproyecto');
update estproy set estado_actual='A' where id_proyect=SYS_CONTEXT('query_mant_estproy','idproyecto') and fecha=maxfecha;
commit;
return 3;
else 
return 0;
end if;
exception 
WHEN NO_DATA_FOUND THEN 
return -1;
WHEN OTHERS THEN
return -1;
end mantestproy;

/

--------------------------------------------------------
--  DDL for Function MANTESTUDIANTE
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "MANTESTUDIANTE" (idest in number, nombres in varchar2,appaterno in varchar2, apmaterno in varchar2, codigouni in varchar2, idesc in number, operacion in number) return number
AS
begin   
if(operacion = 1)then
dbms_session.set_context('query_mant_estudiante','nom',nombres);
dbms_session.set_context('query_mant_estudiante','paterno',appaterno);
dbms_session.set_context('query_mant_estudiante','materno',apmaterno);
dbms_session.set_context('query_mant_estudiante','codigo',codigouni);
dbms_session.set_context('query_mant_estudiante','escuela',idesc);
INSERT INTO ESTUDIANTE (NOMBRES,APPATERNO,APMATERNO,CODIGOUNIV,ID_ESCUELA) VALUES (SYS_CONTEXT('query_mant_estudiante','nom'),
SYS_CONTEXT('query_mant_estudiante','paterno'),SYS_CONTEXT('query_mant_estudiante','materno'),SYS_CONTEXT('query_mant_estudiante','codigo'),
SYS_CONTEXT('query_mant_estudiante','escuela'));
commit;
return 1;
elsif(operacion = 2)then
dbms_session.set_context('query_mant_estudiante','idestudiante',idest);
dbms_session.set_context('query_mant_estudiante','nom',nombres);
dbms_session.set_context('query_mant_estudiante','paterno',appaterno);
dbms_session.set_context('query_mant_estudiante','materno',apmaterno);
dbms_session.set_context('query_mant_estudiante','codigo',codigouni);
dbms_session.set_context('query_mant_estudiante','escuela',idesc);
UPDATE ESTUDIANTE SET NOMBRES = SYS_CONTEXT('query_mant_estudiante','nom'), 
APPATERNO=SYS_CONTEXT('query_mant_estudiante','paterno'),apmaterno=SYS_CONTEXT('query_mant_estudiante','materno'),
codigouniv=SYS_CONTEXT('query_mant_estudiante','codigo'),id_escuela=SYS_CONTEXT('query_mant_estudiante','escuela')
where id = SYS_CONTEXT('query_mant_estudiante','idestudiante');
commit;
return 2;
elsif(operacion = 3) then
dbms_session.set_context('query_mant_estudiante','idestudiante',idest);
DELETE from ESTUDIANTE where id = SYS_CONTEXT('query_mant_estudiante','idestudiante');
commit;
return 3;
else 
return 0;
end if;
exception 
WHEN NO_DATA_FOUND THEN 
return -1;
WHEN OTHERS THEN
return -1;
end mantestudiante;

/

--------------------------------------------------------
--  DDL for Function MANTFACULTAD
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "MANTFACULTAD" (idfac in number, descripcion in varchar2, siglas in varchar2,iduniv in number, operacion in number) return number
AS
begin   
if(operacion = 1)then
dbms_session.set_context('query_mant_facultad','desc',descripcion);
dbms_session.set_context('query_mant_facultad','sglas',siglas);
dbms_session.set_context('query_mant_facultad','iduni',iduniv);
INSERT INTO FACULTAD (DESCRIPCION, SIGLAS,ID_UNIVERSIDAD) VALUES (SYS_CONTEXT('query_mant_facultad','desc'),
SYS_CONTEXT('query_mant_facultad','sglas'),SYS_CONTEXT('query_mant_facultad','iduni'));
commit;
return 1;
elsif(operacion = 2)then
dbms_session.set_context('query_mant_facultad','idfacul',idfac);
dbms_session.set_context('query_mant_facultad','desc',descripcion);
dbms_session.set_context('query_mant_facultad','sglas',siglas);
dbms_session.set_context('query_mant_facultad','iduni',iduniv);
UPDATE FACULTAD SET descripcion = SYS_CONTEXT('query_mant_facultad','desc'), 
siglas = SYS_CONTEXT('query_mant_facultad','sglas'),id_universidad=SYS_CONTEXT('query_mant_facultad','iduni')
where id = SYS_CONTEXT('query_mant_facultad','idfacul');
commit;
return 2;
elsif(operacion = 3) then
dbms_session.set_context('query_mant_facultad','idfacul',idfac);
DELETE from FACULTAD where id = SYS_CONTEXT('query_mant_facultad','idfacul');
commit;
return 3;
else 
return 0;
end if;
exception 
WHEN NO_DATA_FOUND THEN 
return -1;
WHEN OTHERS THEN
return -1;
end mantfacultad;

/

--------------------------------------------------------
--  DDL for Function MANTGRADO
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "MANTGRADO" (idgrado in number, descripcion in varchar2, siglas in varchar2, operacion in number) return number
AS
begin   
if(operacion = 1)then
dbms_session.set_context('query_mant_grado','desc',descripcion);
dbms_session.set_context('query_mant_grado','sglas',siglas);
INSERT INTO GRADO (DESCRIPCION, SIGLAS) VALUES (SYS_CONTEXT('query_mant_grado','desc'),
SYS_CONTEXT('query_mant_grado','sglas'));
commit;
return 1;
elsif(operacion = 2)then
dbms_session.set_context('query_mant_grado','idgrado',idgrado);
dbms_session.set_context('query_mant_grado','desc',descripcion);
dbms_session.set_context('query_mant_grado','sglas',siglas);
UPDATE GRADO SET descripcion = SYS_CONTEXT('query_mant_grado','desc'), 
siglas = SYS_CONTEXT('query_mant_grado','sglas')
where id = SYS_CONTEXT('query_mant_grado','idgrado');
commit;
return 2;
elsif(operacion = 3) then
dbms_session.set_context('query_mant_grado','idgrado',idgrado);
DELETE from GRADO where id = SYS_CONTEXT('query_mant_grado','idgrado');
commit;
return 3;
else 
return 0;
end if;
exception 
WHEN NO_DATA_FOUND THEN 
return -1;
WHEN OTHERS THEN
return -1;
end mantgrado;

/

--------------------------------------------------------
--  DDL for Function MANTPROYDOC
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "MANTPROYDOC" (idproyecto in number, iddocente in number, calidad in varchar2, operacion in number) return number
AS
begin   
if(operacion = 1)then
dbms_session.set_context('query_mant_proydoc','idproyecto',idproyecto);
dbms_session.set_context('query_mant_proydoc','iddocente',iddocente);
dbms_session.set_context('query_mant_proydoc','calidad',calidad);
INSERT INTO proydoc (id_proyecto, id_docente, calidad) VALUES (SYS_CONTEXT('query_mant_proydoc','idproyecto'),
SYS_CONTEXT('query_mant_proydoc','iddocente'), SYS_CONTEXT('query_mant_proydoc','calidad'));
commit;
return 1;
elsif(operacion = 2)then
dbms_session.set_context('query_mant_proydoc','idproyecto',idproyecto);
dbms_session.set_context('query_mant_proydoc','iddocente',iddocente);
dbms_session.set_context('query_mant_proydoc','calidad',calidad);
UPDATE proydoc SET calidad = SYS_CONTEXT('query_mant_proydoc','calidad')
where id_proyecto = SYS_CONTEXT('query_mant_proydoc','idproyecto') and id_docente = SYS_CONTEXT('query_mant_proydoc','iddocente');
commit;
return 2;
elsif(operacion = 3) then
dbms_session.set_context('query_mant_proydoc','idproyecto',idproyecto);
dbms_session.set_context('query_mant_proydoc','iddocente',iddocente);
DELETE from proydoc where id_proyecto = SYS_CONTEXT('query_mant_proydoc','idproyecto')
 and id_docente = SYS_CONTEXT('query_mant_proydoc','iddocente');
commit;
return 3;
else 
return 0;
end if;
exception 
WHEN NO_DATA_FOUND THEN 
return -1;
WHEN OTHERS THEN
return -1;
end mantproydoc;

/

--------------------------------------------------------
--  DDL for Function MANTPROYECTO
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "MANTPROYECTO" (idproyect in number, idsoli in number, descripcion in varchar2,fecha in date,operacion in number) return number
AS
begin   
if(operacion = 1)then
dbms_session.set_context('query_mant_proyecto','idsolicitante',idsoli);
dbms_session.set_context('query_mant_proyecto','desc',descripcion);
dbms_session.set_context('query_mant_proyecto','fechasol',fecha);
INSERT INTO PROYECTO (id_solicitante, descripcion,fecha_sol) VALUES (SYS_CONTEXT('query_mant_proyecto','idsolicitante'),
SYS_CONTEXT('query_mant_proyecto','desc'),SYS_CONTEXT('query_mant_proyecto','fechasol'));
commit;
return 1;
elsif(operacion = 2)then
dbms_session.set_context('query_mant_proyecto','idproyecto',idproyect);
dbms_session.set_context('query_mant_proyecto','idsolicitante',idsoli);
dbms_session.set_context('query_mant_proyecto','desc',descripcion);
dbms_session.set_context('query_mant_proyecto','fechasol',fecha);
UPDATE PROYECTO SET ID_SOLICITANTE = SYS_CONTEXT('query_mant_proyecto','idsolicitante'), descripcion = SYS_CONTEXT('query_mant_proyecto','desc'),
FECHA_SOL=SYS_CONTEXT('query_mant_proyecto','fechasol')
where id = SYS_CONTEXT('query_mant_proyecto','idproyecto');
commit;
return 2;
elsif(operacion = 3) then
dbms_session.set_context('query_mant_proyecto','idproyecto',idproyect);
DELETE from proyecto where id = SYS_CONTEXT('query_mant_proyecto','idproyecto');
commit;
return 3;
else 
return 0;
end if;
exception 
WHEN NO_DATA_FOUND THEN 
return -1;
WHEN OTHERS THEN
return -1;
end mantproyecto;

/

--------------------------------------------------------
--  DDL for Function MANTPROYEST
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "MANTPROYEST" (idproyecto in number,idestudiante in number, operacion in number) return number
AS
begin   
if(operacion = 1)then
dbms_session.set_context('query_mant_proyest','idproy',idproyecto);
dbms_session.set_context('query_mant_proyest','idest',idestudiante);
INSERT INTO proyest(id_proyecto,id_estudiante) VALUES (SYS_CONTEXT('query_mant_proyest','idproy'),SYS_CONTEXT('query_mant_proyest','idest'));
commit;
return 1;
elsif(operacion = 2)then
--dbms_session.set_context('query_mant_proyest','idproy',idproyecto);
--dbms_session.set_context('query_mant_proyest','idest',idestudiante);
--UPDATE estproy SET estado_actual = SYS_CONTEXT('query_mant_estproy','estado'), fecha = SYS_CONTEXT('query_mant_estproy','fecha')
--where id_estado = SYS_CONTEXT('query_mant_estproy','idestado') and id_proyect = SYS_CONTEXT('query_mant_estproy','idproyecto');
--commit;
return 2;
elsif(operacion = 3) then
dbms_session.set_context('query_mant_proyest','idproy',idproyecto);
dbms_session.set_context('query_mant_proyest','idest',idestudiante);
DELETE from proyest where id_proyecto=SYS_CONTEXT('query_mant_proyest','idproy')
 and id_estudiante = SYS_CONTEXT('query_mant_proyest','idest');
commit;
return 3;
else 
return 0;
end if;
exception 
WHEN NO_DATA_FOUND THEN 
return -1;
WHEN OTHERS THEN
return -1;
end mantproyest;

/

--------------------------------------------------------
--  DDL for Function MANTSOLICITANTE
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "MANTSOLICITANTE" (idsoli in number, descripcion in varchar2,ruc in varchar2,direccion in varchar2,codigoubi in varchar2, operacion in number) return number
AS
begin   
if(operacion = 1)then
dbms_session.set_context('query_mant_solicitante','desc',descripcion);
dbms_session.set_context('query_mant_solicitante','ruc',ruc);
dbms_session.set_context('query_mant_solicitante','direccion',direccion);
dbms_session.set_context('query_mant_solicitante','codubi',codigoubi);
INSERT INTO SOLICITANTE (RAZON_SOCIAL,RUC,DIRECCION,CODIGO_UBIGEO) VALUES (SYS_CONTEXT('query_mant_solicitante','desc'),
SYS_CONTEXT('query_mant_solicitante','ruc'),
SYS_CONTEXT('query_mant_solicitante','direccion'),
SYS_CONTEXT('query_mant_solicitante','codubi'));
commit;
return 1;
elsif(operacion = 2)then
dbms_session.set_context('query_mant_solicitante','idsolicitante',idsoli);
dbms_session.set_context('query_mant_solicitante','desc',descripcion);
dbms_session.set_context('query_mant_solicitante','ruc',ruc);
dbms_session.set_context('query_mant_solicitante','direccion',direccion);
dbms_session.set_context('query_mant_solicitante','codubi',codigoubi);
UPDATE SOLICITANTE SET razon_social = SYS_CONTEXT('query_mant_solicitante','desc'),
ruc=SYS_CONTEXT('query_mant_solicitante','ruc'),
direccion=SYS_CONTEXT('query_mant_solicitante','direccion'),
codigo_ubigeo = SYS_CONTEXT('query_mant_solicitante','codubi')
where id = SYS_CONTEXT('query_mant_solicitante','idsolicitante');
commit;
return 2;
elsif(operacion = 3) then
dbms_session.set_context('query_mant_solicitante','idsolicitante',idsoli);
DELETE from SOLICITANTE where id = SYS_CONTEXT('query_mant_solicitante','idsolicitante');
commit;
return 3;
else 
return 0;
end if;
exception 
WHEN NO_DATA_FOUND THEN 
return -1;
WHEN OTHERS THEN
return -1;
end mantsolicitante;

/

--------------------------------------------------------
--  DDL for Function MANTTIPODOCUMENTO
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "MANTTIPODOCUMENTO" (idtipodoc in number, descripcion in varchar2,siglas in varchar2, operacion in number) return number
AS
begin   
if(operacion = 1)then
dbms_session.set_context('query_mant_tipodoc','desc',descripcion);
dbms_session.set_context('query_mant_tipodoc','sig',siglas);
INSERT INTO TIPO_DOCUMENTO (DESCRIPCION,SIGLAS) VALUES (SYS_CONTEXT('query_mant_tipodoc','desc'),SYS_CONTEXT('query_mant_tipodoc','sig'));
commit;
return 1;
elsif(operacion = 2)then
dbms_session.set_context('query_mant_tipodoc','idtipodoc',idtipodoc);
dbms_session.set_context('query_mant_tipodoc','desc',descripcion);
dbms_session.set_context('query_mant_tipodoc','sig',siglas);
UPDATE TIPO_DOCUMENTO SET DESCRIPCION = SYS_CONTEXT('query_mant_tipodoc','desc'), SIGLAS=SYS_CONTEXT('query_mant_tipodoc','sig')
where id = SYS_CONTEXT('query_mant_tipodoc','idtipodoc');
commit;
return 2;
elsif(operacion = 3) then
dbms_session.set_context('query_mant_tipodoc','idtipodoc',idtipodoc);
DELETE from TIPO_DOCUMENTO where id = SYS_CONTEXT('query_mant_tipodoc','idtipodoc');
commit;
return 3;
else 
return 0;
end if;
exception 
WHEN NO_DATA_FOUND THEN 
return -1;
WHEN OTHERS THEN
return -1;
end manttipodocumento;

/

--------------------------------------------------------
--  DDL for Function MANTUBIGEO
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "MANTUBIGEO" (cod in varchar2, departamento in varchar2, provincia in varchar2, distrito in varchar2,operacion in number) return number
AS
begin   
if(operacion = 1)then
dbms_session.set_context('query_mant_ubigeo','codigo',cod);
dbms_session.set_context('query_mant_ubigeo','dep',departamento);
dbms_session.set_context('query_mant_ubigeo','prov',provincia);
dbms_session.set_context('query_mant_ubigeo','dist',distrito);
INSERT INTO UBIGEO (CODIGO,DEPARTAMENTO,PROVINCIA,DISTRITO) VALUES (SYS_CONTEXT('query_mant_ubigeo','codigo'),
SYS_CONTEXT('query_mant_ubigeo','dep'),SYS_CONTEXT('query_mant_ubigeo','prov'),SYS_CONTEXT('query_mant_ubigeo','dist'));
commit;
return 1;
elsif(operacion = 2)then
dbms_session.set_context('query_mant_ubigeo','codigo',cod);
dbms_session.set_context('query_mant_ubigeo','dep',departamento);
dbms_session.set_context('query_mant_ubigeo','prov',provincia);
dbms_session.set_context('query_mant_ubigeo','dist',distrito);
UPDATE UBIGEO SET DEPARTAMENTO = SYS_CONTEXT('query_mant_ubigeo','dep'), 
PROVINCIA = SYS_CONTEXT('query_mant_ubigeo','prov'),DISTRITO = SYS_CONTEXT('query_mant_ubigeo','dist')
where CODIGO = SYS_CONTEXT('query_mant_ubigeo','codigo');
commit;
return 2;
elsif(operacion = 3) then
dbms_session.set_context('query_mant_ubigeo','codigo',cod);
DELETE from UBIGEO where CODIGO = SYS_CONTEXT('query_mant_ubigeo','codigo');
commit;
return 3;
else 
return 0;
end if;
exception 
WHEN NO_DATA_FOUND THEN 
return -1;
WHEN OTHERS THEN
return -1;
end mantubigeo;

/

--------------------------------------------------------
--  DDL for Function MANTUNIVERSIDAD
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "MANTUNIVERSIDAD" (iduni in number, descripcion in varchar2, siglas in varchar2, operacion in number) return number
AS
begin   
if(operacion = 1)then
dbms_session.set_context('query_mant_universidad','desc',descripcion);
dbms_session.set_context('query_mant_universidad','sglas',siglas);
INSERT INTO UNIVERSIDAD (DESCRIPCION, SIGLAS) VALUES (SYS_CONTEXT('query_mant_universidad','desc'),
SYS_CONTEXT('query_mant_universidad','sglas'));
commit;
return 1;
elsif(operacion = 2)then
dbms_session.set_context('query_mant_universidad','iduniv',iduni);
dbms_session.set_context('query_mant_universidad','desc',descripcion);
dbms_session.set_context('query_mant_universidad','sglas',siglas);
UPDATE UNIVERSIDAD SET descripcion = SYS_CONTEXT('query_mant_universidad','desc'), 
siglas = SYS_CONTEXT('query_mant_universidad','sglas')
where id = SYS_CONTEXT('query_mant_universidad','iduniv');
commit;
return 2;
elsif(operacion = 3) then
dbms_session.set_context('query_mant_universidad','iduniv',iduni);
DELETE from UNIVERSIDAD where id = SYS_CONTEXT('query_mant_universidad','iduniv');
commit;
return 3;
else 
return 0;
end if;
exception 
WHEN NO_DATA_FOUND THEN 
return -1;
WHEN OTHERS THEN
return -1;
end mantuniversidad;

/

--------------------------------------------------------
--  DDL for Package TYPES
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE "TYPES" 
AS
TYPE ref_cursor IS REF CURSOR;
END;

/

