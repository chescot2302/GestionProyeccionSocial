/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FormSolicitante.java
 *
 * Created on 01-oct-2011, 21:40:10
 */
package com.gps.view;

import com.gps.bean.Solicitante;
import com.gps.bean.Ubigeo;
import com.gps.comboboxmodel.CbModelDepartamento;
import com.gps.comboboxmodel.CbModelDistrito;
import com.gps.comboboxmodel.CbModelProvincia;
import com.gps.logic.LogicSolicitante;
import com.gps.logic.LogicUbigeo;
import com.gps.tablemodel.TableModelSolicitante;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.math.BigDecimal;
import java.util.ArrayList;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;

/**
 *
 * @author Administrador
 */
public class FormSolicitante extends javax.swing.JPanel {        
                
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblDescripcion = new javax.swing.JLabel();
        lblDepartamento = new javax.swing.JLabel();
        lblProvincia = new javax.swing.JLabel();
        lblDistrito = new javax.swing.JLabel();
        txtDescripcion = new javax.swing.JTextField();
        cbDepartamento = new com.gps.util.JComboBoxAutocomplete();
        cbProvincia = new com.gps.util.JComboBoxAutocomplete();
        cbDistrito = new com.gps.util.JComboBoxAutocomplete();
        btnAplicar = new javax.swing.JButton();
        lblRuc = new javax.swing.JLabel();
        txtRuc = new javax.swing.JTextField();
        lblDireccion = new javax.swing.JLabel();
        txtDireccion = new javax.swing.JTextField();
        btnCancelar = new javax.swing.JButton();
        lblId = new javax.swing.JLabel();

        setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(FormSolicitante.class, "FormSolicitante.border.title"))); // NOI18N

        lblDescripcion.setText(org.openide.util.NbBundle.getMessage(FormSolicitante.class, "FormSolicitante.lblDescripcion.text")); // NOI18N

        lblDepartamento.setText(org.openide.util.NbBundle.getMessage(FormSolicitante.class, "FormSolicitante.lblDepartamento.text")); // NOI18N

        lblProvincia.setText(org.openide.util.NbBundle.getMessage(FormSolicitante.class, "FormSolicitante.lblProvincia.text")); // NOI18N

        lblDistrito.setText(org.openide.util.NbBundle.getMessage(FormSolicitante.class, "FormSolicitante.lblDistrito.text")); // NOI18N

        txtDescripcion.setText(org.openide.util.NbBundle.getMessage(FormSolicitante.class, "FormSolicitante.txtDescripcion.text")); // NOI18N

        cbDepartamento.setEditable(true);
        cbDepartamento.setModel(cbmoddep);
        cbDepartamento.addActionListener(actionListener);

        cbProvincia.setEditable(true);
        cbProvincia.addActionListener(actionListener);

        cbDistrito.setEditable(true);
        cbDistrito.addActionListener(actionListener);

        btnAplicar.setText(org.openide.util.NbBundle.getMessage(FormSolicitante.class, "FormSolicitante.btnAplicar.text")); // NOI18N
        btnAplicar.addActionListener(actionListener);

        lblRuc.setText(org.openide.util.NbBundle.getMessage(FormSolicitante.class, "FormSolicitante.lblRuc.text")); // NOI18N

        txtRuc.setText(org.openide.util.NbBundle.getMessage(FormSolicitante.class, "FormSolicitante.txtRuc.text")); // NOI18N

        lblDireccion.setText(org.openide.util.NbBundle.getMessage(FormSolicitante.class, "FormSolicitante.lblDireccion.text")); // NOI18N

        txtDireccion.setText(org.openide.util.NbBundle.getMessage(FormSolicitante.class, "FormSolicitante.txtDireccion.text")); // NOI18N

        btnCancelar.setText(org.openide.util.NbBundle.getMessage(FormSolicitante.class, "FormSolicitante.btnCancelar.text")); // NOI18N
        btnCancelar.addActionListener(actionListener);

        lblId.setText(org.openide.util.NbBundle.getMessage(FormSolicitante.class, "FormSolicitante.lblId.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblProvincia)
                            .addComponent(lblDistrito)
                            .addComponent(lblDepartamento)
                            .addComponent(lblRuc)
                            .addComponent(lblDireccion)
                            .addComponent(lblDescripcion))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDireccion, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 209, Short.MAX_VALUE)
                            .addComponent(cbProvincia, 0, 209, Short.MAX_VALUE)
                            .addComponent(cbDistrito, 0, 209, Short.MAX_VALUE)
                            .addComponent(cbDepartamento, javax.swing.GroupLayout.Alignment.TRAILING, 0, 209, Short.MAX_VALUE)
                            .addComponent(txtRuc, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 209, Short.MAX_VALUE)
                            .addComponent(txtDescripcion, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 209, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lblId, javax.swing.GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE)
                        .addGap(100, 100, 100)
                        .addComponent(btnAplicar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancelar)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblDescripcion)
                        .addGap(10, 10, 10)
                        .addComponent(lblRuc)
                        .addGap(18, 18, 18)
                        .addComponent(lblDireccion))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(txtRuc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cbDepartamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblProvincia)
                            .addComponent(cbProvincia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblDistrito)
                            .addComponent(cbDistrito, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(lblDepartamento))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(btnAplicar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(lblId, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAplicar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JComboBox cbDepartamento;
    private javax.swing.JComboBox cbDistrito;
    private javax.swing.JComboBox cbProvincia;
    private javax.swing.JLabel lblDepartamento;
    private javax.swing.JLabel lblDescripcion;
    private javax.swing.JLabel lblDireccion;
    private javax.swing.JLabel lblDistrito;
    private javax.swing.JLabel lblId;
    private javax.swing.JLabel lblProvincia;
    private javax.swing.JLabel lblRuc;
    private javax.swing.JTextField txtDescripcion;
    private javax.swing.JTextField txtDireccion;
    private javax.swing.JTextField txtRuc;
    // End of variables declaration//GEN-END:variables
//Inicio de Atributos de Clase
    private CbModelDepartamento cbmoddep = new CbModelDepartamento(LogicUbigeo.ListarDepartamentos());
    private CbModelProvincia cbmodprov = new CbModelProvincia();
    private CbModelDistrito cbmoddist = new CbModelDistrito();
    private TableModelSolicitante modelTablaSol;
    private JTable tabDataSol;
//Fin de atributos de clase
    
//Inicio de Constructores de clase
    public FormSolicitante() {
        initComponents();
    }
    
    public FormSolicitante(JTable tabla, TableModelSolicitante modelTabla) {
        initComponents();
        modelTablaSol = modelTabla;
        tabDataSol = tabla;
        tabDataSol.addKeyListener(keyListener);
        tabDataSol.addMouseListener(mouseAdapter);
    }
//Fin de constructores de clase
    
//Inicio de Eventos
    ActionListener actionListener = new ActionListener() {

        @Override
        public void actionPerformed(ActionEvent e) {
            if (e.getSource().equals(cbDepartamento)) {
                cbDepartamento.getEditor().setItem(cbDepartamento.getSelectedItem());
                cbmodprov.setData(LogicUbigeo.ListarProvincias(cbDepartamento.getSelectedItem().toString()));
                cbProvincia.setModel(cbmodprov);
                cbProvincia.updateUI();
                cbProvincia.getEditor().setItem(null);
                cbmoddist.setData(new ArrayList<Ubigeo>());
                cbDistrito.setModel(cbmoddist);
                cbDistrito.updateUI();
                cbDistrito.getEditor().setItem(null);
            } else if (e.getSource().equals(cbProvincia)) {
                cbProvincia.getEditor().setItem(cbProvincia.getSelectedItem());
                cbmoddist.setData(LogicUbigeo.ListarDistritos(cbDepartamento.getSelectedItem().toString(), cbProvincia.getSelectedItem().toString()));
                cbDistrito.setModel(cbmoddist);
                cbDistrito.updateUI();
                cbDistrito.getEditor().setItem(null);
            } else if (e.getSource().equals(cbDistrito)) {
                cbDistrito.getEditor().setItem(cbDistrito.getSelectedItem());
            } else if (e.getSource().equals(btnAplicar)) {
                mantenimiento();
            } else if (e.getSource().equals(btnCancelar)) {
                cleaning();
            }

        }
    };
    
    MouseAdapter mouseAdapter = new MouseAdapter() {

        @Override
        public void mouseClicked(MouseEvent e) {
            if (e.getClickCount() == 2) {
                cargarDatosUpdate();
            }
        }
    };
    
    KeyListener keyListener = new KeyListener() {

        @Override
        public void keyTyped(KeyEvent e) {
        }

        @Override
        public void keyPressed(KeyEvent e) {
            if (e.getSource().equals(tabDataSol)) {
                if (e.getKeyCode() == KeyEvent.VK_DELETE) {
                    int n = JOptionPane.showConfirmDialog(null, "¿Desea en realidad eliminar el registro?", "Information", JOptionPane.YES_NO_OPTION);
                    if (n == JOptionPane.YES_OPTION) {
                        eliminar();
                    }
                }
            }
        }

        @Override
        public void keyReleased(KeyEvent e) {
        }
    };
//Fin de Eventos
    
//Inicio Metodos del Negocio
    private void mantenimiento() {
        String departamento = null;
        String provincia = null;
        String distrito = null;
        Ubigeo ubi = null;
        String descripcion = null;
        String ruc = null;
        String direccion = null;
        BigDecimal estado = null;
        BigDecimal id = null;
        switch (btnAplicar.getText()) {
            case "Guardar":
                departamento = cbDepartamento.getSelectedItem().toString();
                provincia = cbProvincia.getSelectedItem().toString();
                distrito = cbDistrito.getSelectedItem().toString();
                ubi = LogicUbigeo.listarUbigeo(departamento, provincia, distrito);
                descripcion = txtDescripcion.getText();
                ruc = txtRuc.getText();
                direccion = txtDireccion.getText();
                estado = LogicSolicitante.registrarSolicitante(descripcion, ruc, direccion, ubi.getCodigo());
                if (estado.compareTo(BigDecimal.ONE) == 0) {
                    modelTablaSol.setData(LogicSolicitante.listarSolicitante());
                    modelTablaSol.fireTableDataChanged();
                    cleaning();
                }
                break;
            case "Actualizar":

                departamento = cbDepartamento.getSelectedItem().toString();
                provincia = cbProvincia.getSelectedItem().toString();
                distrito = cbDistrito.getSelectedItem().toString();
                ubi = LogicUbigeo.listarUbigeo(departamento, provincia, distrito);
                descripcion = txtDescripcion.getText();
                ruc = txtRuc.getText();
                direccion = txtDireccion.getText();
                id = BigDecimal.valueOf(Double.valueOf(lblId.getText()));
                estado = LogicSolicitante.actualizarSolicitante(id, descripcion, ruc, direccion, ubi.getCodigo());
                if (estado.compareTo(BigDecimal.valueOf(2)) == 0) {
                    modelTablaSol.setData(LogicSolicitante.listarSolicitante());
                    modelTablaSol.fireTableDataChanged();
                    cleaning();
                }
                break;
        }
    }

    private void eliminar() {
        int fila = tabDataSol.getSelectedRow();
        int modelrow = tabDataSol.convertRowIndexToModel(fila);
        Solicitante sol = ((TableModelSolicitante) tabDataSol.getModel()).getValue(modelrow);
        if (LogicSolicitante.eliminarSolicitante(sol.getId())) {
            ((TableModelSolicitante) tabDataSol.getModel()).borrar(modelrow);
            ViewApplication.mensajeEstado.setText("Eliminado correctamente");
            ViewApplication.mensajeEstado.setIcon(ViewLogin.picture.getIconGood());
        } else {
            ViewApplication.mensajeEstado.setText("Error");
            ViewApplication.mensajeEstado.setIcon(ViewLogin.picture.getIconBad());
        }
    }

    private void cleaning() {
        txtDescripcion.setText(null);
        txtDireccion.setText(null);
        txtRuc.setText(null);
        lblId.setText(null);
        btnAplicar.setText("Guardar");
    }
        
    private void cargarDatosUpdate() {
        btnAplicar.setText("Actualizar");
        try {
            int fila = tabDataSol.getSelectedRow();
            int modelrow = tabDataSol.convertRowIndexToModel(fila);
            Solicitante obj = ((TableModelSolicitante) tabDataSol.getModel()).getValue(modelrow);
            lblId.setText(obj.getId().toString());
            txtDescripcion.setText(obj.getDescripcion());
            txtDireccion.setText(obj.getDireccion());
            txtRuc.setText(obj.getRuc());
            String depar = obj.getUbigeo().getDepartamento();
            String provin = obj.getUbigeo().getProvincia();
            String distri = obj.getUbigeo().getDistrito();
            cbDepartamento.setSelectedItem(depar);
            cbDepartamento.getEditor().setItem(depar);
            cbmodprov.setData(LogicUbigeo.ListarProvincias(depar));
            cbProvincia.setModel(cbmodprov);
            cbProvincia.updateUI();
            cbProvincia.getEditor().setItem(provin);
            cbmoddist.setData(LogicUbigeo.ListarDistritos(depar, provin));
            cbDistrito.setModel(cbmoddist);
            cbDistrito.updateUI();
            cbDistrito.getEditor().setItem(distri);
        } catch (Exception ex) {
            ViewApplication.mensajeEstado.setText("Error");
            ViewApplication.mensajeEstado.setIcon(ViewLogin.picture.getIconBad());
        }
    }
//Fin de Metodos del Negocio

//Inicio de getters y setters
    public ActionListener getActionListener() {
        return actionListener;
    }

    public JButton getBtnAplicar() {
        return btnAplicar;
    }

    public JComboBox getCbDepartamento() {
        return cbDepartamento;
    }

    public JComboBox getCbDistrito() {
        return cbDistrito;
    }

    public JComboBox getCbProvincia() {
        return cbProvincia;
    }

    public CbModelDepartamento getCbmoddep() {
        return cbmoddep;
    }

    public CbModelDistrito getCbmoddist() {
        return cbmoddist;
    }

    public CbModelProvincia getCbmodprov() {
        return cbmodprov;
    }

    public JLabel getLblDepartamento() {
        return lblDepartamento;
    }

    public JLabel getLblDescripcion() {
        return lblDescripcion;
    }

    public JLabel getLblDistrito() {
        return lblDistrito;
    }

    public JLabel getLblProvincia() {
        return lblProvincia;
    }

    public JTextField getTxtDescripcion() {
        return txtDescripcion;
    }

    public JLabel getLblDireccion() {
        return lblDireccion;
    }

    public void setLblDireccion(JLabel lblDireccion) {
        this.lblDireccion = lblDireccion;
    }

    public JLabel getLblRuc() {
        return lblRuc;
    }

    public void setLblRuc(JLabel lblRuc) {
        this.lblRuc = lblRuc;
    }

    public JTextField getTxtDireccion() {
        return txtDireccion;
    }

    public void setTxtDireccion(JTextField txtDireccion) {
        this.txtDireccion = txtDireccion;
    }

    public JTextField getTxtRuc() {
        return txtRuc;
    }

    public void setTxtRuc(JTextField txtRuc) {
        this.txtRuc = txtRuc;
    }

    public JButton getBtnCancelar() {
        return btnCancelar;
    }

    public void setBtnCancelar(JButton btnCancelar) {
        this.btnCancelar = btnCancelar;
    }

    public JLabel getLblId() {
        return lblId;
    }

    public void setLblId(JLabel lblId) {
        this.lblId = lblId;
    }
//Fin de getters y setters
}
